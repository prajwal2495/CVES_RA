[{"id":8,"name":"Bounty Awarded","shortname":"bounty","description":"We define a bounty as a monetary award given by the development team to a researcher who discovered a vulnerability. Bounties garner a wide variety of monetary rewards, depending on a variety of factors. The severity of the vulnerablity at the time of its discovery is a main driver [1,3], however.\n\nBounties also create an interesting economy that competes with the black-hat economy of a vulnerability [2]. Knowledge of a vulnerability can be very profitable for attackers. So software companies will defray this cost by giving out bounties. Thus, bounty awards are inextricably linked to their black market value.\n\nBelow are some interesting publications on the topic of bug bounty programs and vulnerabilities.\n\n* [1] Mingyi Zhao, Jens Grossklags, and Peng Liu. 2015. An Empirical Study of Web Vulnerability Discovery Ecosystems. In Proceedings of the 22nd ACM SIGSAC Conference on Computer and Communications Security (CCS '15). ACM, New York, NY, USA, 1105-1117. DOI: https://doi.org/10.1145/2810103.2813704\n* [2] Serge Egelman, Cormac Herley, and Paul C. van Oorschot. 2013. Markets for zero-day exploits: ethics and implications. In Proceedings of the 2013 New Security Paradigms Workshop (NSPW '13). ACM, New York, NY, USA, 41-46. DOI: https://doi.org/10.1145/2535813.2535818\n* [3] Nuthan Munaiah and Andrew Meneely. 2016. Vulnerability severity scoring and bounties: why the disconnect?. In Proceedings of the 2nd International Workshop on Software Analytics (SWAN 2016). ACM, New York, NY, USA, 8-14. DOI: https://doi.org/10.1145/2989238.2989239\n","color":"#25C322","icon":"money","short_desc":"We define a bounty as a monetary award given by the development team to a researcher who discovered a vulnerability. Bounties garner a wide variety of monetary rewards, depending on a variety of factors. The severity of the vulnerablity at..."},{"id":104,"name":"CWE-1021: Improper Restriction of Rendered UI Layers or Frames","shortname":"cwe-1021","description":"\"The web application does not restrict or incorrectly restricts frame objects or UI layers that belong to another application or domain, which can lead to user confusion about which interface the user is interacting with.\" - For more infomration visit https://cwe.mitre.org/data/definitions/1021.html\n","color":"#99ccff","icon":"tag","short_desc":"\"The web application does not restrict or incorrectly restricts frame objects or UI layers that belong to another application or domain, which can lead to user confusion about which interface the user is interacting with.\" - For more infom..."},{"id":497,"name":"CWE-103: Struts: Incomplete validate() Method Definition","shortname":"cwe-103","description":"\"The application has a validator form that either does not define a validate() method, or defines a validate() method but does not call super.validate().\" - For more infomration visit https://cwe.mitre.org/data/definitions/103.html\n","color":"#99ccff","icon":"tag","short_desc":"\"The application has a validator form that either does not define a validate() method, or defines a validate() method but does not call super.validate().\" - For more infomration visit https://cwe.mitre.org/data/definitions/103.html\n..."},{"id":59,"name":"CWE-114: Process Control","shortname":"cwe-114","description":"\"Executing commands or loading libraries from an untrusted source or in an untrusted environment can cause an application to execute malicious commands (and payloads) on behalf of an attacker.\" - For more infomration visit https://cwe.mitre.org/data/definitions/114.html\n","color":"#99ccff","icon":"tag","short_desc":"\"Executing commands or loading libraries from an untrusted source or in an untrusted environment can cause an application to execute malicious commands (and payloads) on behalf of an attacker.\" - For more infomration visit https://cwe.mitr..."},{"id":392,"name":"CWE-116: Improper Encoding or Escaping of Output","shortname":"cwe-116","description":"\"The software prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved.\" - For more infomration visit https://cwe.mitre.org/data/definitions/116.html\n","color":"#99ccff","icon":"tag","short_desc":"\"The software prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved.\" - For m..."},{"id":15,"name":"CWE-119: Improper Restriction of Operations within the Bounds of a Memory Buffer","shortname":"cwe-119","description":"\"The software performs operations on a memory buffer, but it can read from or write to a memory location that is outside of the intended boundary of the buffer.\" - For more infomration visit https://cwe.mitre.org/data/definitions/119.html\n","color":"#99ccff","icon":"tag","short_desc":"\"The software performs operations on a memory buffer, but it can read from or write to a memory location that is outside of the intended boundary of the buffer.\" - For more infomration visit https://cwe.mitre.org/data/definitions/119.html\n..."},{"id":63,"name":"CWE-120: Buffer Copy without Checking Size of Input ('Classic Buffer Overflow')","shortname":"cwe-120","description":"\"The program copies an input buffer to an output buffer without verifying that the size of the input buffer is less than the size of the output buffer, leading to a buffer overflow.\" - For more infomration visit https://cwe.mitre.org/data/definitions/120.html\n","color":"#99ccff","icon":"tag","short_desc":"\"The program copies an input buffer to an output buffer without verifying that the size of the input buffer is less than the size of the output buffer, leading to a buffer overflow.\" - For more infomration visit https://cwe.mitre.org/data/..."},{"id":11,"name":"CWE-121: Stack-based Buffer Overflow","shortname":"cwe-121","description":"\"A stack-based buffer overflow condition is a condition where the buffer being overwritten is allocated on the stack (i.e., is a local variable or, rarely, a parameter to a function).\" - For more infomration visit https://cwe.mitre.org/data/definitions/121.html\n","color":"#99ccff","icon":"tag","short_desc":"\"A stack-based buffer overflow condition is a condition where the buffer being overwritten is allocated on the stack (i.e., is a local variable or, rarely, a parameter to a function).\" - For more infomration visit https://cwe.mitre.org/dat..."},{"id":49,"name":"CWE-122: Heap-based Buffer Overflow","shortname":"cwe-122","description":"\"A heap overflow condition is a buffer overflow, where the buffer that can be overwritten is allocated in the heap portion of memory, generally meaning that the buffer was allocated using a routine such as malloc().\" - For more infomration visit https://cwe.mitre.org/data/definitions/122.html\n","color":"#99ccff","icon":"tag","short_desc":"\"A heap overflow condition is a buffer overflow, where the buffer that can be overwritten is allocated in the heap portion of memory, generally meaning that the buffer was allocated using a routine such as malloc().\" - For more infomration..."},{"id":50,"name":"CWE-125: Out-of-bounds Read","shortname":"cwe-125","description":"\"The software reads data past the end, or before the beginning, of the intended buffer.\" - For more infomration visit https://cwe.mitre.org/data/definitions/125.html\n","color":"#99ccff","icon":"tag","short_desc":"\"The software reads data past the end, or before the beginning, of the intended buffer.\" - For more infomration visit https://cwe.mitre.org/data/definitions/125.html\n..."},{"id":384,"name":"CWE-126: Buffer Over-read","shortname":"cwe-126","description":"\"The software reads from a buffer using buffer access mechanisms such as indexes or pointers that reference memory locations after the targeted buffer.\" - For more infomration visit https://cwe.mitre.org/data/definitions/126.html\n","color":"#99ccff","icon":"tag","short_desc":"\"The software reads from a buffer using buffer access mechanisms such as indexes or pointers that reference memory locations after the targeted buffer.\" - For more infomration visit https://cwe.mitre.org/data/definitions/126.html\n..."},{"id":66,"name":"CWE-129: Improper Validation of Array Index","shortname":"cwe-129","description":"\"The product uses untrusted input when calculating or using an array index, but the product does not validate or incorrectly validates the index to ensure the index references a valid position within the array.\" - For more infomration visit https://cwe.mitre.org/data/definitions/129.html\n","color":"#99ccff","icon":"tag","short_desc":"\"The product uses untrusted input when calculating or using an array index, but the product does not validate or incorrectly validates the index to ensure the index references a valid position within the array.\" - For more infomration visi..."},{"id":102,"name":"CWE-130: Improper Handling of Length Parameter Inconsistency ","shortname":"cwe-130","description":"\"The software parses a formatted message or structure, but it does not handle or incorrectly handles a length field that is inconsistent with the actual length of the associated data.\" - For more infomration visit https://cwe.mitre.org/data/definitions/130.html\n","color":"#99ccff","icon":"tag","short_desc":"\"The software parses a formatted message or structure, but it does not handle or incorrectly handles a length field that is inconsistent with the actual length of the associated data.\" - For more infomration visit https://cwe.mitre.org/dat..."},{"id":85,"name":"CWE-146: Improper Neutralization of Expression/Command Delimiters","shortname":"cwe-146","description":"\"The software receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as expression or command delimiters when they are sent to a downstream component.\" - For more infomration visit https://cwe.mitre.org/data/definitions/146.html\n","color":"#99ccff","icon":"tag","short_desc":"\"The software receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as expression or command delimiters when they are sent to a downstream component.\" - ..."},{"id":389,"name":"CWE-150: Improper Neutralization of Escape, Meta, or Control Sequences","shortname":"cwe-150","description":"\"The software receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as escape, meta, or control character sequences when they are sent to a downstream component.\" - For more infomration visit https://cwe.mitre.org/data/definitions/150.html\n","color":"#99ccff","icon":"tag","short_desc":"\"The software receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as escape, meta, or control character sequences when they are sent to a downstream co..."},{"id":447,"name":"CWE-153: Improper Neutralization of Substitution Characters","shortname":"cwe-153","description":"\"The software receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as substitution characters when they are sent to a downstream component.\" - For more infomration visit https://cwe.mitre.org/data/definitions/153.html\n","color":"#99ccff","icon":"tag","short_desc":"\"The software receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as substitution characters when they are sent to a downstream component.\" - For more ..."},{"id":385,"name":"CWE-156: Improper Neutralization of Whitespace","shortname":"cwe-156","description":"\"The software receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as whitespace when they are sent to a downstream component.\" - For more infomration visit https://cwe.mitre.org/data/definitions/156.html\n","color":"#99ccff","icon":"tag","short_desc":"\"The software receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as whitespace when they are sent to a downstream component.\" - For more infomration v..."},{"id":76,"name":"CWE-159: Failure to Sanitize Special Element","shortname":"cwe-159","description":"\"Weaknesses in this attack-focused category do not properly filter and interpret special elements in user-controlled input which could cause adverse effect on the software behavior and integrity.\" - For more infomration visit https://cwe.mitre.org/data/definitions/159.html\n","color":"#99ccff","icon":"tag","short_desc":"\"Weaknesses in this attack-focused category do not properly filter and interpret special elements in user-controlled input which could cause adverse effect on the software behavior and integrity.\" - For more infomration visit https://cwe.m..."},{"id":391,"name":"CWE-16: Configuration","shortname":"cwe-16","description":"\"Weaknesses in this category are typically introduced during the configuration of the software.\" - For more infomration visit https://cwe.mitre.org/data/definitions/16.html\n","color":"#99ccff","icon":"tag","short_desc":"\"Weaknesses in this category are typically introduced during the configuration of the software.\" - For more infomration visit https://cwe.mitre.org/data/definitions/16.html\n..."},{"id":498,"name":"CWE-183: Permissive Whitelist","shortname":"cwe-183","description":"\"An application uses a whitelist of acceptable values, but the whitelist includes at least one unsafe value, leading to resultant weaknesses.\" - For more infomration visit https://cwe.mitre.org/data/definitions/183.html\n","color":"#99ccff","icon":"tag","short_desc":"\"An application uses a whitelist of acceptable values, but the whitelist includes at least one unsafe value, leading to resultant weaknesses.\" - For more infomration visit https://cwe.mitre.org/data/definitions/183.html\n..."},{"id":43,"name":"CWE-184: Incomplete Blacklist","shortname":"cwe-184","description":"\"An application uses a blacklist of prohibited values, but the blacklist is incomplete.\" - For more infomration visit https://cwe.mitre.org/data/definitions/184.html\n","color":"#99ccff","icon":"tag","short_desc":"\"An application uses a blacklist of prohibited values, but the blacklist is incomplete.\" - For more infomration visit https://cwe.mitre.org/data/definitions/184.html\n..."},{"id":45,"name":"CWE-189: Numeric Errors","shortname":"cwe-189","description":"\"Weaknesses in this category are related to improper calculation or conversion of numbers.\" - For more infomration visit https://cwe.mitre.org/data/definitions/189.html\n","color":"#99ccff","icon":"tag","short_desc":"\"Weaknesses in this category are related to improper calculation or conversion of numbers.\" - For more infomration visit https://cwe.mitre.org/data/definitions/189.html\n..."},{"id":65,"name":"CWE-190: Integer Overflow or Wraparound","shortname":"cwe-190","description":"\"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.\" - For more infomration visit https://cwe.mitre.org/data/definitions/190.html\n","color":"#99ccff","icon":"tag","short_desc":"\"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculatio..."},{"id":394,"name":"CWE-193: Off-by-one Error","shortname":"cwe-193","description":"\"A product calculates or uses an incorrect maximum or minimum value that is 1 more, or 1 less, than the correct value.\" - For more infomration visit https://cwe.mitre.org/data/definitions/193.html\n","color":"#99ccff","icon":"tag","short_desc":"\"A product calculates or uses an incorrect maximum or minimum value that is 1 more, or 1 less, than the correct value.\" - For more infomration visit https://cwe.mitre.org/data/definitions/193.html\n..."},{"id":111,"name":"CWE-19: Data Processing Errors","shortname":"cwe-19","description":"\"Weaknesses in this category are typically found in functionality that processes data.\" - For more infomration visit https://cwe.mitre.org/data/definitions/19.html\n","color":"#99ccff","icon":"tag","short_desc":"\"Weaknesses in this category are typically found in functionality that processes data.\" - For more infomration visit https://cwe.mitre.org/data/definitions/19.html\n..."},{"id":19,"name":"CWE-200: Information Exposure","shortname":"cwe-200","description":"\"An information exposure is the intentional or unintentional disclosure of information to an actor that is not explicitly authorized to have access to that information.\" - For more infomration visit https://cwe.mitre.org/data/definitions/200.html\n","color":"#99ccff","icon":"tag","short_desc":"\"An information exposure is the intentional or unintentional disclosure of information to an actor that is not explicitly authorized to have access to that information.\" - For more infomration visit https://cwe.mitre.org/data/definitions/2..."},{"id":18,"name":"CWE-201: Information Exposure Through Sent Data","shortname":"cwe-201","description":"\"The accidental exposure of sensitive information through sent data refers to the transmission of data which are either sensitive in and of itself or useful in the further exploitation of the system through standard data channels.\" - For more infomration visit https://cwe.mitre.org/data/definitions/201.html\n","color":"#99ccff","icon":"tag","short_desc":"\"The accidental exposure of sensitive information through sent data refers to the transmission of data which are either sensitive in and of itself or useful in the further exploitation of the system through standard data channels.\" - For m..."},{"id":84,"name":"CWE-203: Information Exposure Through Discrepancy","shortname":"cwe-203","description":"\"The product behaves differently or sends different responses in a way that exposes security-relevant information about the state of the product, such as whether a particular operation was successful or not.\" - For more infomration visit https://cwe.mitre.org/data/definitions/203.html\n","color":"#99ccff","icon":"tag","short_desc":"\"The product behaves differently or sends different responses in a way that exposes security-relevant information about the state of the product, such as whether a particular operation was successful or not.\" - For more infomration visit h..."},{"id":383,"name":"CWE-209: Information Exposure Through an Error Message","shortname":"cwe-209","description":"\"The software generates an error message that includes sensitive information about its environment, users, or associated data.\" - For more infomration visit https://cwe.mitre.org/data/definitions/209.html\n","color":"#99ccff","icon":"tag","short_desc":"\"The software generates an error message that includes sensitive information about its environment, users, or associated data.\" - For more infomration visit https://cwe.mitre.org/data/definitions/209.html\n..."},{"id":20,"name":"CWE-20: Improper Input Validation","shortname":"cwe-20","description":"\"The product does not validate or incorrectly validates input that can affect the control flow or data flow of a program.\" - For more infomration visit https://cwe.mitre.org/data/definitions/20.html\n","color":"#99ccff","icon":"tag","short_desc":"\"The product does not validate or incorrectly validates input that can affect the control flow or data flow of a program.\" - For more infomration visit https://cwe.mitre.org/data/definitions/20.html\n..."},{"id":461,"name":"CWE-212: Improper Cross-boundary Removal of Sensitive Data","shortname":"cwe-212","description":"\"The software uses a resource that contains sensitive data, but it does not properly remove that data before it stores, transfers, or shares the resource with actors in another control sphere.\" - For more infomration visit https://cwe.mitre.org/data/definitions/212.html\n","color":"#99ccff","icon":"tag","short_desc":"\"The software uses a resource that contains sensitive data, but it does not properly remove that data before it stores, transfers, or shares the resource with actors in another control sphere.\" - For more infomration visit https://cwe.mitr..."},{"id":36,"name":"CWE-228: Improper Handling of Syntactically Invalid Structure","shortname":"cwe-228","description":"\"The product does not handle or incorrectly handles input that is not syntactically well-formed with respect to the associated specification.\" - For more infomration visit https://cwe.mitre.org/data/definitions/228.html\n","color":"#99ccff","icon":"tag","short_desc":"\"The product does not handle or incorrectly handles input that is not syntactically well-formed with respect to the associated specification.\" - For more infomration visit https://cwe.mitre.org/data/definitions/228.html\n..."},{"id":108,"name":"CWE-229: Improper Handling of Values","shortname":"cwe-229","description":"\"The software does not properly handle when the expected number of values for parameters, fields, or arguments is not provided in input, or if those values are undefined.\" - For more infomration visit https://cwe.mitre.org/data/definitions/229.html\n","color":"#99ccff","icon":"tag","short_desc":"\"The software does not properly handle when the expected number of values for parameters, fields, or arguments is not provided in input, or if those values are undefined.\" - For more infomration visit https://cwe.mitre.org/data/definitions..."},{"id":24,"name":"CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')","shortname":"cwe-22","description":"\"The software uses external input to construct a pathname that is intended to identify a file or directory that is located underneath a restricted parent directory, but the software does not properly neutralize special elements within the pathname that can cause the pathname to resolve to a location that is outside of the restricted directory.\" - For more infomration visit https://cwe.mitre.org/data/definitions/22.html\n","color":"#99ccff","icon":"tag","short_desc":"\"The software uses external input to construct a pathname that is intended to identify a file or directory that is located underneath a restricted parent directory, but the software does not properly neutralize special elements within the ..."},{"id":455,"name":"CWE-235: Improper Handling of Extra Parameters","shortname":"cwe-235","description":"\"The software does not handle or incorrectly handles when the number of parameters, fields, or arguments with the same name exceeds the expected amount.\" - For more infomration visit https://cwe.mitre.org/data/definitions/235.html\n","color":"#99ccff","icon":"tag","short_desc":"\"The software does not handle or incorrectly handles when the number of parameters, fields, or arguments with the same name exceeds the expected amount.\" - For more infomration visit https://cwe.mitre.org/data/definitions/235.html\n..."},{"id":457,"name":"CWE-239: Failure to Handle Incomplete Element","shortname":"cwe-239","description":"\"The software does not properly handle when a particular element is not completely specified.\" - For more infomration visit https://cwe.mitre.org/data/definitions/239.html\n","color":"#99ccff","icon":"tag","short_desc":"\"The software does not properly handle when a particular element is not completely specified.\" - For more infomration visit https://cwe.mitre.org/data/definitions/239.html\n..."},{"id":103,"name":"CWE-23: Relative Path Traversal","shortname":"cwe-23","description":"\"The software uses external input to construct a pathname that should be within a restricted directory, but it does not properly neutralize sequences such as .. that can resolve to a location that is outside of that directory.\" - For more infomration visit https://cwe.mitre.org/data/definitions/23.html\n","color":"#99ccff","icon":"tag","short_desc":"\"The software uses external input to construct a pathname that should be within a restricted directory, but it does not properly neutralize sequences such as .. that can resolve to a location that is outside of that directory.\" - For more ..."},{"id":105,"name":"CWE-248: Uncaught Exception","shortname":"cwe-248","description":"\"An exception is thrown from a function, but it is not caught.\" - For more infomration visit https://cwe.mitre.org/data/definitions/248.html\n","color":"#99ccff","icon":"tag","short_desc":"\"An exception is thrown from a function, but it is not caught.\" - For more infomration visit https://cwe.mitre.org/data/definitions/248.html\n..."},{"id":40,"name":"CWE-252: Unchecked Return Value","shortname":"cwe-252","description":"\"The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.\" - For more infomration visit https://cwe.mitre.org/data/definitions/252.html\n","color":"#99ccff","icon":"tag","short_desc":"\"The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.\" - For more infomration visit https://cwe.mitre.org/data/definitions/252.html\n..."},{"id":107,"name":"CWE-254: 7PK - Security Features","shortname":"cwe-254","description":"\"Software security is not security software. Here we're concerned with topics like authentication, access control, confidentiality, cryptography, and privilege management.\" - For more infomration visit https://cwe.mitre.org/data/definitions/254.html\n","color":"#99ccff","icon":"tag","short_desc":"\"Software security is not security software. Here we're concerned with topics like authentication, access control, confidentiality, cryptography, and privilege management.\" - For more infomration visit https://cwe.mitre.org/data/definition..."},{"id":42,"name":"CWE-264: Permissions, Privileges, and Access Controls","shortname":"cwe-264","description":"\"Weaknesses in this category are related to the management of permissions, privileges, and other security features that are used to perform access control.\" - For more infomration visit https://cwe.mitre.org/data/definitions/264.html\n","color":"#99ccff","icon":"tag","short_desc":"\"Weaknesses in this category are related to the management of permissions, privileges, and other security features that are used to perform access control.\" - For more infomration visit https://cwe.mitre.org/data/definitions/264.html\n..."},{"id":68,"name":"CWE-265: Privilege / Sandbox Issues","shortname":"cwe-265","description":"\"Weaknesses in this category occur with improper enforcement of sandbox environments, or the improper handling, assignment, or management of privileges.\" - For more infomration visit https://cwe.mitre.org/data/definitions/265.html\n","color":"#99ccff","icon":"tag","short_desc":"\"Weaknesses in this category occur with improper enforcement of sandbox environments, or the improper handling, assignment, or management of privileges.\" - For more infomration visit https://cwe.mitre.org/data/definitions/265.html\n..."},{"id":452,"name":"CWE-266: Incorrect Privilege Assignment","shortname":"cwe-266","description":"\"A product incorrectly assigns a privilege to a particular actor, creating an unintended sphere of control for that actor.\" - For more infomration visit https://cwe.mitre.org/data/definitions/266.html\n","color":"#99ccff","icon":"tag","short_desc":"\"A product incorrectly assigns a privilege to a particular actor, creating an unintended sphere of control for that actor.\" - For more infomration visit https://cwe.mitre.org/data/definitions/266.html\n..."},{"id":52,"name":"CWE-267: Privilege Defined With Unsafe Actions","shortname":"cwe-267","description":"\"A particular privilege, role, capability, or right can be used to perform unsafe actions that were not intended, even when it is assigned to the correct entity.\" - For more infomration visit https://cwe.mitre.org/data/definitions/267.html\n","color":"#99ccff","icon":"tag","short_desc":"\"A particular privilege, role, capability, or right can be used to perform unsafe actions that were not intended, even when it is assigned to the correct entity.\" - For more infomration visit https://cwe.mitre.org/data/definitions/267.html..."},{"id":458,"name":"CWE-269: Improper Privilege Management","shortname":"cwe-269","description":"\"The software does not properly assign, modify, track, or check privileges for an actor, creating an unintended sphere of control for that actor.\" - For more infomration visit https://cwe.mitre.org/data/definitions/269.html\n","color":"#99ccff","icon":"tag","short_desc":"\"The software does not properly assign, modify, track, or check privileges for an actor, creating an unintended sphere of control for that actor.\" - For more infomration visit https://cwe.mitre.org/data/definitions/269.html\n..."},{"id":32,"name":"CWE-279: Incorrect Execution-Assigned Permissions","shortname":"cwe-279","description":"\"While it is executing, the software sets the permissions of an object in a way that violates the intended permissions that have been specified by the user.\" - For more infomration visit https://cwe.mitre.org/data/definitions/279.html\n","color":"#99ccff","icon":"tag","short_desc":"\"While it is executing, the software sets the permissions of an object in a way that violates the intended permissions that have been specified by the user.\" - For more infomration visit https://cwe.mitre.org/data/definitions/279.html\n..."},{"id":26,"name":"CWE-284: Improper Access Control","shortname":"cwe-284","description":"\"The software does not restrict or incorrectly restricts access to a resource from an unauthorized actor.\" - For more infomration visit https://cwe.mitre.org/data/definitions/284.html\n","color":"#99ccff","icon":"tag","short_desc":"\"The software does not restrict or incorrectly restricts access to a resource from an unauthorized actor.\" - For more infomration visit https://cwe.mitre.org/data/definitions/284.html\n..."},{"id":16,"name":"CWE-287: Improper Authentication","shortname":"cwe-287","description":"\"When an actor claims to have a given identity, the software does not prove or insufficiently proves that the claim is correct.\" - For more infomration visit https://cwe.mitre.org/data/definitions/287.html\n","color":"#99ccff","icon":"tag","short_desc":"\"When an actor claims to have a given identity, the software does not prove or insufficiently proves that the claim is correct.\" - For more infomration visit https://cwe.mitre.org/data/definitions/287.html\n..."},{"id":113,"name":"CWE-290: Authentication Bypass by Spoofing","shortname":"cwe-290","description":"\"This attack-focused weakness is caused by improperly implemented authentication schemes that are subject to spoofing attacks.\" - For more infomration visit https://cwe.mitre.org/data/definitions/290.html\n","color":"#99ccff","icon":"tag","short_desc":"\"This attack-focused weakness is caused by improperly implemented authentication schemes that are subject to spoofing attacks.\" - For more infomration visit https://cwe.mitre.org/data/definitions/290.html\n..."},{"id":454,"name":"CWE-294: Authentication Bypass by Capture-replay","shortname":"cwe-294","description":"\"A capture-replay flaw exists when the design of the software makes it possible for a malicious user to sniff network traffic and bypass authentication by replaying it to the server in question to the same effect as the original message (or with minor changes).\" - For more infomration visit https://cwe.mitre.org/data/definitions/294.html\n","color":"#99ccff","icon":"tag","short_desc":"\"A capture-replay flaw exists when the design of the software makes it possible for a malicious user to sniff network traffic and bypass authentication by replaying it to the server in question to the same effect as the original message (o..."},{"id":73,"name":"CWE-295: Improper Certificate Validation","shortname":"cwe-295","description":"\"The software does not validate, or incorrectly validates, a certificate.\" - For more infomration visit https://cwe.mitre.org/data/definitions/295.html\n","color":"#99ccff","icon":"tag","short_desc":"\"The software does not validate, or incorrectly validates, a certificate.\" - For more infomration visit https://cwe.mitre.org/data/definitions/295.html\n..."},{"id":58,"name":"CWE-297: Improper Validation of Certificate with Host Mismatch","shortname":"cwe-297","description":"\"The software communicates with a host that provides a certificate, but the software does not properly ensure that the certificate is actually associated with that host.\" - For more infomration visit https://cwe.mitre.org/data/definitions/297.html\n","color":"#99ccff","icon":"tag","short_desc":"\"The software communicates with a host that provides a certificate, but the software does not properly ensure that the certificate is actually associated with that host.\" - For more infomration visit https://cwe.mitre.org/data/definitions/..."},{"id":460,"name":"CWE-300: Channel Accessible by Non-Endpoint ('Man-in-the-Middle')","shortname":"cwe-300","description":"\"The product does not adequately verify the identity of actors at both ends of a communication channel, or does not adequately ensure the integrity of the channel, in a way that allows the channel to be accessed or influenced by an actor that is not an endpoint.\" - For more infomration visit https://cwe.mitre.org/data/definitions/300.html\n","color":"#99ccff","icon":"tag","short_desc":"\"The product does not adequately verify the identity of actors at both ends of a communication channel, or does not adequately ensure the integrity of the channel, in a way that allows the channel to be accessed or influenced by an actor t..."},{"id":396,"name":"CWE-303: Incorrect Implementation of Authentication Algorithm","shortname":"cwe-303","description":"\"The requirements for the software dictate the use of an established authentication algorithm, but the implementation of the algorithm is incorrect.\" - For more infomration visit https://cwe.mitre.org/data/definitions/303.html\n","color":"#99ccff","icon":"tag","short_desc":"\"The requirements for the software dictate the use of an established authentication algorithm, but the implementation of the algorithm is incorrect.\" - For more infomration visit https://cwe.mitre.org/data/definitions/303.html\n..."},{"id":388,"name":"CWE-305: Authentication Bypass by Primary Weakness","shortname":"cwe-305","description":"\"The authentication algorithm is sound, but the implemented mechanism can be bypassed as the result of a separate weakness that is primary to the authentication error.\" - For more infomration visit https://cwe.mitre.org/data/definitions/305.html\n","color":"#99ccff","icon":"tag","short_desc":"\"The authentication algorithm is sound, but the implemented mechanism can be bypassed as the result of a separate weakness that is primary to the authentication error.\" - For more infomration visit https://cwe.mitre.org/data/definitions/30..."},{"id":64,"name":"CWE-310: Cryptographic Issues","shortname":"cwe-310","description":"\"Weaknesses in this category are related to the use of cryptography.\" - For more infomration visit https://cwe.mitre.org/data/definitions/310.html\n","color":"#99ccff","icon":"tag","short_desc":"\"Weaknesses in this category are related to the use of cryptography.\" - For more infomration visit https://cwe.mitre.org/data/definitions/310.html\n..."},{"id":96,"name":"CWE-330: Use of Insufficiently Random Values","shortname":"cwe-330","description":"\"The software may use insufficiently random numbers or values in a security context that depends on unpredictable numbers.\" - For more infomration visit https://cwe.mitre.org/data/definitions/330.html\n","color":"#99ccff","icon":"tag","short_desc":"\"The software may use insufficiently random numbers or values in a security context that depends on unpredictable numbers.\" - For more infomration visit https://cwe.mitre.org/data/definitions/330.html\n..."},{"id":495,"name":"CWE-342: Predictable Exact Value from Previous Values","shortname":"cwe-342","description":"\"An exact value or random number can be precisely predicted by observing previous values.\" - For more infomration visit https://cwe.mitre.org/data/definitions/342.html\n","color":"#99ccff","icon":"tag","short_desc":"\"An exact value or random number can be precisely predicted by observing previous values.\" - For more infomration visit https://cwe.mitre.org/data/definitions/342.html\n..."},{"id":95,"name":"CWE-345: Insufficient Verification of Data Authenticity","shortname":"cwe-345","description":"\"The software does not sufficiently verify the origin or authenticity of data, in a way that causes it to accept invalid data.\" - For more infomration visit https://cwe.mitre.org/data/definitions/345.html\n","color":"#99ccff","icon":"tag","short_desc":"\"The software does not sufficiently verify the origin or authenticity of data, in a way that causes it to accept invalid data.\" - For more infomration visit https://cwe.mitre.org/data/definitions/345.html\n..."},{"id":62,"name":"CWE-346: Origin Validation Error","shortname":"cwe-346","description":"\"The software does not properly verify that the source of data or communication is valid.\" - For more infomration visit https://cwe.mitre.org/data/definitions/346.html\n","color":"#99ccff","icon":"tag","short_desc":"\"The software does not properly verify that the source of data or communication is valid.\" - For more infomration visit https://cwe.mitre.org/data/definitions/346.html\n..."},{"id":75,"name":"CWE-347: Improper Verification of Cryptographic Signature","shortname":"cwe-347","description":"\"The software does not verify, or incorrectly verifies, the cryptographic signature for data.\" - For more infomration visit https://cwe.mitre.org/data/definitions/347.html\n","color":"#99ccff","icon":"tag","short_desc":"\"The software does not verify, or incorrectly verifies, the cryptographic signature for data.\" - For more infomration visit https://cwe.mitre.org/data/definitions/347.html\n..."},{"id":74,"name":"CWE-352: Cross-Site Request Forgery (CSRF)","shortname":"cwe-352","description":"\"The web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request.\" - For more infomration visit https://cwe.mitre.org/data/definitions/352.html\n","color":"#99ccff","icon":"tag","short_desc":"\"The web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request.\" - For more infomration visit https://cwe.mitre.org/data/defi..."},{"id":88,"name":"CWE-357: Insufficient UI Warning of Dangerous Operations","shortname":"cwe-357","description":"\"The user interface provides a warning to a user regarding dangerous or sensitive operations, but the warning is not noticeable enough to warrant attention.\" - For more infomration visit https://cwe.mitre.org/data/definitions/357.html\n","color":"#99ccff","icon":"tag","short_desc":"\"The user interface provides a warning to a user regarding dangerous or sensitive operations, but the warning is not noticeable enough to warrant attention.\" - For more infomration visit https://cwe.mitre.org/data/definitions/357.html\n..."},{"id":70,"name":"CWE-358: Improperly Implemented Security Check for Standard","shortname":"cwe-358","description":"\"The software does not implement or incorrectly implements one or more security-relevant checks as specified by the design of a standardized algorithm, protocol, or technique.\" - For more infomration visit https://cwe.mitre.org/data/definitions/358.html\n","color":"#99ccff","icon":"tag","short_desc":"\"The software does not implement or incorrectly implements one or more security-relevant checks as specified by the design of a standardized algorithm, protocol, or technique.\" - For more infomration visit https://cwe.mitre.org/data/defini..."},{"id":80,"name":"CWE-359: Exposure of Private Information ('Privacy Violation')","shortname":"cwe-359","description":"\"The software does not properly prevent private data (such as credit card numbers) from being accessed by actors who either (1) are not explicitly authorized to access the data or (2) do not have the implicit consent of the people to which the data is related.\" - For more infomration visit https://cwe.mitre.org/data/definitions/359.html\n","color":"#99ccff","icon":"tag","short_desc":"\"The software does not properly prevent private data (such as credit card numbers) from being accessed by actors who either (1) are not explicitly authorized to access the data or (2) do not have the implicit consent of the people to which..."},{"id":38,"name":"CWE-361: 7PK - Time and State","shortname":"cwe-361","description":"\"This category represents one of the phyla in the Seven Pernicious Kingdoms vulnerability classification. It includes weaknesses related to the improper management of time and state in an environment that supports simultaneous or near-simultaneous computation by multiple systems, processes, or threads. According to the authors of the Seven Pernicious Kingdoms, \"Distributed computation is about time and state. That is, in order for more than one component to communicate, state must be shared, and all that takes time. Most programmers anthropomorphize their work. They think about one thread of control carrying out the entire program in the same way they would if they had to do the job themselves. Modern computers, however, switch between tasks very quickly, and in multi-core, multi-CPU, or distributed systems, two events may take place at exactly the same time. Defects rush to fill the gap between the programmer's model of how a program executes and what happens in reality. These defects are related to unexpected interactions between threads, processes, time, and information. These interactions happen through shared state: semaphores, variables, the file system, and, basically, anything that can store information.\"\" - For more infomration visit https://cwe.mitre.org/data/definitions/361.html\n","color":"#99ccff","icon":"tag","short_desc":"\"This category represents one of the phyla in the Seven Pernicious Kingdoms vulnerability classification. It includes weaknesses related to the improper management of time and state in an environment that supports simultaneous or near-simu..."},{"id":25,"name":"CWE-362: Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')","shortname":"cwe-362","description":"\"The program contains a code sequence that can run concurrently with other code, and the code sequence requires temporary, exclusive access to a shared resource, but a timing window exists in which the shared resource can be modified by another code sequence that is operating concurrently.\" - For more infomration visit https://cwe.mitre.org/data/definitions/362.html\n","color":"#99ccff","icon":"tag","short_desc":"\"The program contains a code sequence that can run concurrently with other code, and the code sequence requires temporary, exclusive access to a shared resource, but a timing window exists in which the shared resource can be modified by an..."},{"id":112,"name":"CWE-363: Race Condition Enabling Link Following","shortname":"cwe-363","description":"\"The software checks the status of a file or directory before accessing it, which produces a race condition in which the file can be replaced with a link before the access is performed, causing the software to access the wrong file.\" - For more infomration visit https://cwe.mitre.org/data/definitions/363.html\n","color":"#99ccff","icon":"tag","short_desc":"\"The software checks the status of a file or directory before accessing it, which produces a race condition in which the file can be replaced with a link before the access is performed, causing the software to access the wrong file.\" - For..."},{"id":92,"name":"CWE-364: Signal Handler Race Condition","shortname":"cwe-364","description":"\"The software uses a signal handler that introduces a race condition.\" - For more infomration visit https://cwe.mitre.org/data/definitions/364.html\n","color":"#99ccff","icon":"tag","short_desc":"\"The software uses a signal handler that introduces a race condition.\" - For more infomration visit https://cwe.mitre.org/data/definitions/364.html\n..."},{"id":446,"name":"CWE-366: Race Condition within a Thread","shortname":"cwe-366","description":"\"If two threads of execution use a resource simultaneously, there exists the possibility that resources may be used while invalid, in turn making the state of execution undefined.\" - For more infomration visit https://cwe.mitre.org/data/definitions/366.html\n","color":"#99ccff","icon":"tag","short_desc":"\"If two threads of execution use a resource simultaneously, there exists the possibility that resources may be used while invalid, in turn making the state of execution undefined.\" - For more infomration visit https://cwe.mitre.org/data/de..."},{"id":493,"name":"CWE-36: Absolute Path Traversal","shortname":"cwe-36","description":"\"The software uses external input to construct a pathname that should be within a restricted directory, but it does not properly neutralize absolute path sequences such as /abs/path that can resolve to a location that is outside of that directory.\" - For more infomration visit https://cwe.mitre.org/data/definitions/36.html\n","color":"#99ccff","icon":"tag","short_desc":"\"The software uses external input to construct a pathname that should be within a restricted directory, but it does not properly neutralize absolute path sequences such as /abs/path that can resolve to a location that is outside of that di..."},{"id":390,"name":"CWE-384: Session Fixation","shortname":"cwe-384","description":"\"Authenticating a user, or otherwise establishing a new user session, without invalidating any existing session identifier gives an attacker the opportunity to steal authenticated sessions.\" - For more infomration visit https://cwe.mitre.org/data/definitions/384.html\n","color":"#99ccff","icon":"tag","short_desc":"\"Authenticating a user, or otherwise establishing a new user session, without invalidating any existing session identifier gives an attacker the opportunity to steal authenticated sessions.\" - For more infomration visit https://cwe.mitre.o..."},{"id":72,"name":"CWE-399: Resource Management Errors","shortname":"cwe-399","description":"\"Weaknesses in this category are related to improper management of system resources.\" - For more infomration visit https://cwe.mitre.org/data/definitions/399.html\n","color":"#99ccff","icon":"tag","short_desc":"\"Weaknesses in this category are related to improper management of system resources.\" - For more infomration visit https://cwe.mitre.org/data/definitions/399.html\n..."},{"id":35,"name":"CWE-400: Uncontrolled Resource Consumption ('Resource Exhaustion')","shortname":"cwe-400","description":"\"The software does not properly restrict the size or amount of resources that are requested or influenced by an actor, which can be used to consume more resources than intended.\" - For more infomration visit https://cwe.mitre.org/data/definitions/400.html\n","color":"#99ccff","icon":"tag","short_desc":"\"The software does not properly restrict the size or amount of resources that are requested or influenced by an actor, which can be used to consume more resources than intended.\" - For more infomration visit https://cwe.mitre.org/data/defi..."},{"id":61,"name":"CWE-401: Improper Release of Memory Before Removing Last Reference ('Memory Leak')","shortname":"cwe-401","description":"\"The software does not sufficiently track and release allocated memory after it has been used, which slowly consumes remaining memory.\" - For more infomration visit https://cwe.mitre.org/data/definitions/401.html\n","color":"#99ccff","icon":"tag","short_desc":"\"The software does not sufficiently track and release allocated memory after it has been used, which slowly consumes remaining memory.\" - For more infomration visit https://cwe.mitre.org/data/definitions/401.html\n..."},{"id":41,"name":"CWE-404: Improper Resource Shutdown or Release","shortname":"cwe-404","description":"\"The program does not release or incorrectly releases a resource before it is made available for re-use.\" - For more infomration visit https://cwe.mitre.org/data/definitions/404.html\n","color":"#99ccff","icon":"tag","short_desc":"\"The program does not release or incorrectly releases a resource before it is made available for re-use.\" - For more infomration visit https://cwe.mitre.org/data/definitions/404.html\n..."},{"id":55,"name":"CWE-415: Double Free","shortname":"cwe-415","description":"\"The product calls free() twice on the same memory address, potentially leading to modification of unexpected memory locations.\" - For more infomration visit https://cwe.mitre.org/data/definitions/415.html\n","color":"#99ccff","icon":"tag","short_desc":"\"The product calls free() twice on the same memory address, potentially leading to modification of unexpected memory locations.\" - For more infomration visit https://cwe.mitre.org/data/definitions/415.html\n..."},{"id":34,"name":"CWE-416: Use After Free","shortname":"cwe-416","description":"\"Referencing memory after it has been freed can cause a program to crash, use unexpected values, or execute code.\" - For more infomration visit https://cwe.mitre.org/data/definitions/416.html\n","color":"#99ccff","icon":"tag","short_desc":"\"Referencing memory after it has been freed can cause a program to crash, use unexpected values, or execute code.\" - For more infomration visit https://cwe.mitre.org/data/definitions/416.html\n..."},{"id":57,"name":"CWE-425: Direct Request ('Forced Browsing')","shortname":"cwe-425","description":"\"The web application does not adequately enforce appropriate authorization on all restricted URLs, scripts, or files.\" - For more infomration visit https://cwe.mitre.org/data/definitions/425.html\n","color":"#99ccff","icon":"tag","short_desc":"\"The web application does not adequately enforce appropriate authorization on all restricted URLs, scripts, or files.\" - For more infomration visit https://cwe.mitre.org/data/definitions/425.html\n..."},{"id":39,"name":"CWE-426: Untrusted Search Path","shortname":"cwe-426","description":"\"The application searches for critical resources using an externally-supplied search path that can point to resources that are not under the application's direct control.\" - For more infomration visit https://cwe.mitre.org/data/definitions/426.html\n","color":"#99ccff","icon":"tag","short_desc":"\"The application searches for critical resources using an externally-supplied search path that can point to resources that are not under the application's direct control.\" - For more infomration visit https://cwe.mitre.org/data/definitions..."},{"id":490,"name":"CWE-430: Deployment of Wrong Handler","shortname":"cwe-430","description":"\"The wrong handler is assigned to process an object.\" - For more infomration visit https://cwe.mitre.org/data/definitions/430.html\n","color":"#99ccff","icon":"tag","short_desc":"\"The wrong handler is assigned to process an object.\" - For more infomration visit https://cwe.mitre.org/data/definitions/430.html\n..."},{"id":453,"name":"CWE-431: Missing Handler","shortname":"cwe-431","description":"\"A handler is not available or implemented.\" - For more infomration visit https://cwe.mitre.org/data/definitions/431.html\n","color":"#99ccff","icon":"tag","short_desc":"\"A handler is not available or implemented.\" - For more infomration visit https://cwe.mitre.org/data/definitions/431.html\n..."},{"id":450,"name":"CWE-434: Unrestricted Upload of File with Dangerous Type","shortname":"cwe-434","description":"\"The software allows the attacker to upload or transfer files of dangerous types that can be automatically processed within the product's environment.\" - For more infomration visit https://cwe.mitre.org/data/definitions/434.html\n","color":"#99ccff","icon":"tag","short_desc":"\"The software allows the attacker to upload or transfer files of dangerous types that can be automatically processed within the product's environment.\" - For more infomration visit https://cwe.mitre.org/data/definitions/434.html\n..."},{"id":47,"name":"CWE-435: Improper Interaction Between Multiple Correctly-Behaving Entities","shortname":"cwe-435","description":"\"An interaction error occurs when two entities have correct behavior when running independently of each other, but when they are integrated as components in a larger system or process, they introduce incorrect behaviors that may cause resultant weaknesses.\" - For more infomration visit https://cwe.mitre.org/data/definitions/435.html\n","color":"#99ccff","icon":"tag","short_desc":"\"An interaction error occurs when two entities have correct behavior when running independently of each other, but when they are integrated as components in a larger system or process, they introduce incorrect behaviors that may cause resu..."},{"id":387,"name":"CWE-444: Inconsistent Interpretation of HTTP Requests ('HTTP Request Smuggling')","shortname":"cwe-444","description":"\"When malformed or abnormal HTTP requests are interpreted by one or more entities in the data flow between the user and the web server, such as a proxy or firewall, they can be interpreted inconsistently, allowing the attacker to smuggle a request to one device without the other device being aware of it.\" - For more infomration visit https://cwe.mitre.org/data/definitions/444.html\n","color":"#99ccff","icon":"tag","short_desc":"\"When malformed or abnormal HTTP requests are interpreted by one or more entities in the data flow between the user and the web server, such as a proxy or firewall, they can be interpreted inconsistently, allowing the attacker to smuggle a..."},{"id":31,"name":"CWE-451: User Interface (UI) Misrepresentation of Critical Information","shortname":"cwe-451","description":"\"The user interface (UI) does not properly represent critical information to the user, allowing the information - or its source - to be obscured or spoofed. This is often a component in phishing attacks.\" - For more infomration visit https://cwe.mitre.org/data/definitions/451.html\n","color":"#99ccff","icon":"tag","short_desc":"\"The user interface (UI) does not properly represent critical information to the user, allowing the information - or its source - to be obscured or spoofed. This is often a component in phishing attacks.\" - For more infomration visit https..."},{"id":386,"name":"CWE-454: External Initialization of Trusted Variables or Data Stores","shortname":"cwe-454","description":"\"The software initializes critical internal variables or data stores using inputs that can be modified by untrusted actors.\" - For more infomration visit https://cwe.mitre.org/data/definitions/454.html\n","color":"#99ccff","icon":"tag","short_desc":"\"The software initializes critical internal variables or data stores using inputs that can be modified by untrusted actors.\" - For more infomration visit https://cwe.mitre.org/data/definitions/454.html\n..."},{"id":87,"name":"CWE-456: Missing Initialization of a Variable","shortname":"cwe-456","description":"\"The software does not initialize critical variables, which causes the execution environment to use unexpected values.\" - For more infomration visit https://cwe.mitre.org/data/definitions/456.html\n","color":"#99ccff","icon":"tag","short_desc":"\"The software does not initialize critical variables, which causes the execution environment to use unexpected values.\" - For more infomration visit https://cwe.mitre.org/data/definitions/456.html\n..."},{"id":90,"name":"CWE-457: Use of Uninitialized Variable","shortname":"cwe-457","description":"\"The code uses a variable that has not been initialized, leading to unpredictable or unintended results.\" - For more infomration visit https://cwe.mitre.org/data/definitions/457.html\n","color":"#99ccff","icon":"tag","short_desc":"\"The code uses a variable that has not been initialized, leading to unpredictable or unintended results.\" - For more infomration visit https://cwe.mitre.org/data/definitions/457.html\n..."},{"id":30,"name":"CWE-459: Incomplete Cleanup","shortname":"cwe-459","description":"\"The software does not properly clean up and remove temporary or supporting resources after they have been used.\" - For more infomration visit https://cwe.mitre.org/data/definitions/459.html\n","color":"#99ccff","icon":"tag","short_desc":"\"The software does not properly clean up and remove temporary or supporting resources after they have been used.\" - For more infomration visit https://cwe.mitre.org/data/definitions/459.html\n..."},{"id":98,"name":"CWE-466: Return of Pointer Value Outside of Expected Range","shortname":"cwe-466","description":"\"A function can return a pointer to memory that is outside of the buffer that the pointer is expected to reference.\" - For more infomration visit https://cwe.mitre.org/data/definitions/466.html\n","color":"#99ccff","icon":"tag","short_desc":"\"A function can return a pointer to memory that is outside of the buffer that the pointer is expected to reference.\" - For more infomration visit https://cwe.mitre.org/data/definitions/466.html\n..."},{"id":110,"name":"CWE-470: Use of Externally-Controlled Input to Select Classes or Code ('Unsafe Reflection')","shortname":"cwe-470","description":"\"The application uses external input with reflection to select which classes or code to use, but it does not sufficiently prevent the input from selecting improper classes or code.\" - For more infomration visit https://cwe.mitre.org/data/definitions/470.html\n","color":"#99ccff","icon":"tag","short_desc":"\"The application uses external input with reflection to select which classes or code to use, but it does not sufficiently prevent the input from selecting improper classes or code.\" - For more infomration visit https://cwe.mitre.org/data/d..."},{"id":13,"name":"CWE-472: External Control of Assumed-Immutable Web Parameter","shortname":"cwe-472","description":"\"The web application does not sufficiently verify inputs that are assumed to be immutable but are actually externally controllable, such as hidden form fields.\" - For more infomration visit https://cwe.mitre.org/data/definitions/472.html\n","color":"#99ccff","icon":"tag","short_desc":"\"The web application does not sufficiently verify inputs that are assumed to be immutable but are actually externally controllable, such as hidden form fields.\" - For more infomration visit https://cwe.mitre.org/data/definitions/472.html\n..."},{"id":33,"name":"CWE-476: NULL Pointer Dereference","shortname":"cwe-476","description":"\"A NULL pointer dereference occurs when the application dereferences a pointer that it expects to be valid, but is NULL, typically causing a crash or exit.\" - For more infomration visit https://cwe.mitre.org/data/definitions/476.html\n","color":"#99ccff","icon":"tag","short_desc":"\"A NULL pointer dereference occurs when the application dereferences a pointer that it expects to be valid, but is NULL, typically causing a crash or exit.\" - For more infomration visit https://cwe.mitre.org/data/definitions/476.html\n..."},{"id":491,"name":"CWE-477: Use of Obsolete Function","shortname":"cwe-477","description":"\"The code uses deprecated or obsolete functions, which suggests that the code has not been actively reviewed or maintained.\" - For more infomration visit https://cwe.mitre.org/data/definitions/477.html\n","color":"#99ccff","icon":"tag","short_desc":"\"The code uses deprecated or obsolete functions, which suggests that the code has not been actively reviewed or maintained.\" - For more infomration visit https://cwe.mitre.org/data/definitions/477.html\n..."},{"id":14,"name":"CWE-488: Exposure of Data Element to Wrong Session","shortname":"cwe-488","description":"\"The product does not sufficiently enforce boundaries between the states of different sessions, causing data to be provided to, or used by, the wrong session.\" - For more infomration visit https://cwe.mitre.org/data/definitions/488.html\n","color":"#99ccff","icon":"tag","short_desc":"\"The product does not sufficiently enforce boundaries between the states of different sessions, causing data to be provided to, or used by, the wrong session.\" - For more infomration visit https://cwe.mitre.org/data/definitions/488.html\n..."},{"id":489,"name":"CWE-502: Deserialization of Untrusted Data","shortname":"cwe-502","description":"\"The application deserializes untrusted data without sufficiently verifying that the resulting data will be valid.\" - For more infomration visit https://cwe.mitre.org/data/definitions/502.html\n","color":"#99ccff","icon":"tag","short_desc":"\"The application deserializes untrusted data without sufficiently verifying that the resulting data will be valid.\" - For more infomration visit https://cwe.mitre.org/data/definitions/502.html\n..."},{"id":106,"name":"CWE-523: Unprotected Transport of Credentials","shortname":"cwe-523","description":"\"Login pages not using adequate measures to protect the user name and password while they are in transit from the client to the server.\" - For more infomration visit https://cwe.mitre.org/data/definitions/523.html\n","color":"#99ccff","icon":"tag","short_desc":"\"Login pages not using adequate measures to protect the user name and password while they are in transit from the client to the server.\" - For more infomration visit https://cwe.mitre.org/data/definitions/523.html\n..."},{"id":395,"name":"CWE-524: Information Exposure Through Caching","shortname":"cwe-524","description":"\"The application uses a cache to maintain a pool of objects, threads, connections, pages, or passwords to minimize the time it takes to access them or the resources to which they connect. If implemented improperly, these caches can allow access to unauthorized information or cause a denial of service vulnerability.\" - For more infomration visit https://cwe.mitre.org/data/definitions/524.html\n","color":"#99ccff","icon":"tag","short_desc":"\"The application uses a cache to maintain a pool of objects, threads, connections, pages, or passwords to minimize the time it takes to access them or the resources to which they connect. If implemented improperly, these caches can allow a..."},{"id":37,"name":"CWE-525: Information Exposure Through Browser Caching","shortname":"cwe-525","description":"\"For each web page, the application should have an appropriate caching policy specifying the extent to which the page and its form fields should be cached.\" - For more infomration visit https://cwe.mitre.org/data/definitions/525.html\n","color":"#99ccff","icon":"tag","short_desc":"\"For each web page, the application should have an appropriate caching policy specifying the extent to which the page and its form fields should be cached.\" - For more infomration visit https://cwe.mitre.org/data/definitions/525.html\n..."},{"id":398,"name":"CWE-540: Information Exposure Through Source Code","shortname":"cwe-540","description":"\"Source code on a web server often contains sensitive information and should generally not be accessible to users.\" - For more infomration visit https://cwe.mitre.org/data/definitions/540.html\n","color":"#99ccff","icon":"tag","short_desc":"\"Source code on a web server often contains sensitive information and should generally not be accessible to users.\" - For more infomration visit https://cwe.mitre.org/data/definitions/540.html\n..."},{"id":54,"name":"CWE-567: Unsynchronized Access to Shared Data in a Multithreaded Context","shortname":"cwe-567","description":"\"The product does not properly synchronize shared data, such as static variables across threads, which can lead to undefined behavior and unpredictable data changes.\" - For more infomration visit https://cwe.mitre.org/data/definitions/567.html\n","color":"#99ccff","icon":"tag","short_desc":"\"The product does not properly synchronize shared data, such as static variables across threads, which can lead to undefined behavior and unpredictable data changes.\" - For more infomration visit https://cwe.mitre.org/data/definitions/567...."},{"id":77,"name":"CWE-595: Comparison of Object References Instead of Object Contents","shortname":"cwe-595","description":"\"The program compares object references instead of the contents of the objects themselves, preventing it from detecting equivalent objects.\" - For more infomration visit https://cwe.mitre.org/data/definitions/595.html\n","color":"#99ccff","icon":"tag","short_desc":"\"The program compares object references instead of the contents of the objects themselves, preventing it from detecting equivalent objects.\" - For more infomration visit https://cwe.mitre.org/data/definitions/595.html\n..."},{"id":17,"name":"CWE-601: URL Redirection to Untrusted Site ('Open Redirect')","shortname":"cwe-601","description":"\"A web application accepts a user-controlled input that specifies a link to an external site, and uses that link in a Redirect. This simplifies phishing attacks.\" - For more infomration visit https://cwe.mitre.org/data/definitions/601.html\n","color":"#99ccff","icon":"tag","short_desc":"\"A web application accepts a user-controlled input that specifies a link to an external site, and uses that link in a Redirect. This simplifies phishing attacks.\" - For more infomration visit https://cwe.mitre.org/data/definitions/601.html..."},{"id":109,"name":"CWE-616: Incomplete Identification of Uploaded File Variables (PHP)","shortname":"cwe-616","description":"\"The PHP application uses an old method for processing uploaded files by referencing the four global variables that are set for each file (e.g. $varname, $varname_size, $varname_name, $varname_type). These variables could be overwritten by attackers, causing the application to process unauthorized files.\" - For more infomration visit https://cwe.mitre.org/data/definitions/616.html\n","color":"#99ccff","icon":"tag","short_desc":"\"The PHP application uses an old method for processing uploaded files by referencing the four global variables that are set for each file (e.g. $varname, $varname_size, $varname_name, $varname_type). These variables could be overwritten by..."},{"id":492,"name":"CWE-626: Null Byte Interaction Error (Poison Null Byte)","shortname":"cwe-626","description":"\"The product does not properly handle null bytes or NUL characters when passing data between different representations or components.\" - For more infomration visit https://cwe.mitre.org/data/definitions/626.html\n","color":"#99ccff","icon":"tag","short_desc":"\"The product does not properly handle null bytes or NUL characters when passing data between different representations or components.\" - For more infomration visit https://cwe.mitre.org/data/definitions/626.html\n..."},{"id":29,"name":"CWE-641: Improper Restriction of Names for Files and Other Resources","shortname":"cwe-641","description":"\"The application constructs the name of a file or other resource using input from an upstream component, but it does not restrict or incorrectly restricts the resulting name.\" - For more infomration visit https://cwe.mitre.org/data/definitions/641.html\n","color":"#99ccff","icon":"tag","short_desc":"\"The application constructs the name of a file or other resource using input from an upstream component, but it does not restrict or incorrectly restricts the resulting name.\" - For more infomration visit https://cwe.mitre.org/data/definit..."},{"id":44,"name":"CWE-643: Improper Neutralization of Data within XPath Expressions ('XPath Injection')","shortname":"cwe-643","description":"\"The software uses external input to dynamically construct an XPath expression used to retrieve data from an XML database, but it does not neutralize or incorrectly neutralizes that input. This allows an attacker to control the structure of the query.\" - For more infomration visit https://cwe.mitre.org/data/definitions/643.html\n","color":"#99ccff","icon":"tag","short_desc":"\"The software uses external input to dynamically construct an XPath expression used to retrieve data from an XML database, but it does not neutralize or incorrectly neutralizes that input. This allows an attacker to control the structure o..."},{"id":23,"name":"CWE-644: Improper Neutralization of HTTP Headers for Scripting Syntax","shortname":"cwe-644","description":"\"The application does not neutralize or incorrectly neutralizes web scripting syntax in HTTP headers that can be used by web browser components that can process raw headers, such as Flash.\" - For more infomration visit https://cwe.mitre.org/data/definitions/644.html\n","color":"#99ccff","icon":"tag","short_desc":"\"The application does not neutralize or incorrectly neutralizes web scripting syntax in HTTP headers that can be used by web browser components that can process raw headers, such as Flash.\" - For more infomration visit https://cwe.mitre.or..."},{"id":82,"name":"CWE-648: Incorrect Use of Privileged APIs","shortname":"cwe-648","description":"\"The application does not conform to the API requirements for a function call that requires extra privileges. This could allow attackers to gain privileges by causing the function to be called incorrectly.\" - For more infomration visit https://cwe.mitre.org/data/definitions/648.html\n","color":"#99ccff","icon":"tag","short_desc":"\"The application does not conform to the API requirements for a function call that requires extra privileges. This could allow attackers to gain privileges by causing the function to be called incorrectly.\" - For more infomration visit htt..."},{"id":451,"name":"CWE-650: Trusting HTTP Permission Methods on the Server Side","shortname":"cwe-650","description":"\"The server contains a protection mechanism that assumes that any URI that is accessed using HTTP GET will not cause a state change to the associated resource. This might allow attackers to bypass intended access restrictions and conduct resource modification and deletion attacks, since some applications allow GET to modify state.\" - For more infomration visit https://cwe.mitre.org/data/definitions/650.html\n","color":"#99ccff","icon":"tag","short_desc":"\"The server contains a protection mechanism that assumes that any URI that is accessed using HTTP GET will not cause a state change to the associated resource. This might allow attackers to bypass intended access restrictions and conduct r..."},{"id":81,"name":"CWE-653: Insufficient Compartmentalization","shortname":"cwe-653","description":"\"The product does not sufficiently compartmentalize functionality or processes that require different privilege levels, rights, or permissions.\" - For more infomration visit https://cwe.mitre.org/data/definitions/653.html\n","color":"#99ccff","icon":"tag","short_desc":"\"The product does not sufficiently compartmentalize functionality or processes that require different privilege levels, rights, or permissions.\" - For more infomration visit https://cwe.mitre.org/data/definitions/653.html\n..."},{"id":91,"name":"CWE-664: Improper Control of a Resource Through its Lifetime","shortname":"cwe-664","description":"\"The software does not maintain or incorrectly maintains control over a resource throughout its lifetime of creation, use, and release.\" - For more infomration visit https://cwe.mitre.org/data/definitions/664.html\n","color":"#99ccff","icon":"tag","short_desc":"\"The software does not maintain or incorrectly maintains control over a resource throughout its lifetime of creation, use, and release.\" - For more infomration visit https://cwe.mitre.org/data/definitions/664.html\n..."},{"id":86,"name":"CWE-665: Improper Initialization","shortname":"cwe-665","description":"\"The software does not initialize or incorrectly initializes a resource, which might leave the resource in an unexpected state when it is accessed or used.\" - For more infomration visit https://cwe.mitre.org/data/definitions/665.html\n","color":"#99ccff","icon":"tag","short_desc":"\"The software does not initialize or incorrectly initializes a resource, which might leave the resource in an unexpected state when it is accessed or used.\" - For more infomration visit https://cwe.mitre.org/data/definitions/665.html\n..."},{"id":97,"name":"CWE-666: Operation on Resource in Wrong Phase of Lifetime","shortname":"cwe-666","description":"\"The software performs an operation on a resource at the wrong phase of the resource's lifecycle, which can lead to unexpected behaviors.\" - For more infomration visit https://cwe.mitre.org/data/definitions/666.html\n","color":"#99ccff","icon":"tag","short_desc":"\"The software performs an operation on a resource at the wrong phase of the resource's lifecycle, which can lead to unexpected behaviors.\" - For more infomration visit https://cwe.mitre.org/data/definitions/666.html\n..."},{"id":22,"name":"CWE-674: Uncontrolled Recursion","shortname":"cwe-674","description":"\"The product does not properly control the amount of recursion that takes place, which consumes excessive resources, such as allocated memory or the program stack.\" - For more infomration visit https://cwe.mitre.org/data/definitions/674.html\n","color":"#99ccff","icon":"tag","short_desc":"\"The product does not properly control the amount of recursion that takes place, which consumes excessive resources, such as allocated memory or the program stack.\" - For more infomration visit https://cwe.mitre.org/data/definitions/674.ht..."},{"id":69,"name":"CWE-680: Integer Overflow to Buffer Overflow","shortname":"cwe-680","description":"\"The product performs a calculation to determine how much memory to allocate, but an integer overflow can occur that causes less memory to be allocated than expected, leading to a buffer overflow.\" - For more infomration visit https://cwe.mitre.org/data/definitions/680.html\n","color":"#99ccff","icon":"tag","short_desc":"\"The product performs a calculation to determine how much memory to allocate, but an integer overflow can occur that causes less memory to be allocated than expected, leading to a buffer overflow.\" - For more infomration visit https://cwe...."},{"id":459,"name":"CWE-682: Incorrect Calculation","shortname":"cwe-682","description":"\"The software performs a calculation that generates incorrect or unintended results that are later used in security-critical decisions or resource management.\" - For more infomration visit https://cwe.mitre.org/data/definitions/682.html\n","color":"#99ccff","icon":"tag","short_desc":"\"The software performs a calculation that generates incorrect or unintended results that are later used in security-critical decisions or resource management.\" - For more infomration visit https://cwe.mitre.org/data/definitions/682.html\n..."},{"id":56,"name":"CWE-684: Incorrect Provision of Specified Functionality","shortname":"cwe-684","description":"\"The code does not function according to its published specifications, potentially leading to incorrect usage.\" - For more infomration visit https://cwe.mitre.org/data/definitions/684.html\n","color":"#99ccff","icon":"tag","short_desc":"\"The code does not function according to its published specifications, potentially leading to incorrect usage.\" - For more infomration visit https://cwe.mitre.org/data/definitions/684.html\n..."},{"id":449,"name":"CWE-688: Function Call With Incorrect Variable or Reference as Argument","shortname":"cwe-688","description":"\"The software calls a function, procedure, or routine, but the caller specifies the wrong variable or reference as one of the arguments, which may lead to undefined behavior and resultant weaknesses.\" - For more infomration visit https://cwe.mitre.org/data/definitions/688.html\n","color":"#99ccff","icon":"tag","short_desc":"\"The software calls a function, procedure, or routine, but the caller specifies the wrong variable or reference as one of the arguments, which may lead to undefined behavior and resultant weaknesses.\" - For more infomration visit https://c..."},{"id":393,"name":"CWE-690: Unchecked Return Value to NULL Pointer Dereference","shortname":"cwe-690","description":"\"The product does not check for an error after calling a function that can return with a NULL pointer if the function fails, which leads to a resultant NULL pointer dereference.\" - For more infomration visit https://cwe.mitre.org/data/definitions/690.html\n","color":"#99ccff","icon":"tag","short_desc":"\"The product does not check for an error after calling a function that can return with a NULL pointer if the function fails, which leads to a resultant NULL pointer dereference.\" - For more infomration visit https://cwe.mitre.org/data/defi..."},{"id":99,"name":"CWE-692: Incomplete Blacklist to Cross-Site Scripting","shortname":"cwe-692","description":"\"The product uses a blacklist-based protection mechanism to defend against XSS attacks, but the blacklist is incomplete, allowing XSS variants to succeed.\" - For more infomration visit https://cwe.mitre.org/data/definitions/692.html\n","color":"#99ccff","icon":"tag","short_desc":"\"The product uses a blacklist-based protection mechanism to defend against XSS attacks, but the blacklist is incomplete, allowing XSS variants to succeed.\" - For more infomration visit https://cwe.mitre.org/data/definitions/692.html\n..."},{"id":93,"name":"CWE-703: Improper Check or Handling of Exceptional Conditions","shortname":"cwe-703","description":"\"The software does not properly anticipate or handle exceptional conditions that rarely occur during normal operation of the software.\" - For more infomration visit https://cwe.mitre.org/data/definitions/703.html\n","color":"#99ccff","icon":"tag","short_desc":"\"The software does not properly anticipate or handle exceptional conditions that rarely occur during normal operation of the software.\" - For more infomration visit https://cwe.mitre.org/data/definitions/703.html\n..."},{"id":71,"name":"CWE-704: Incorrect Type Conversion or Cast","shortname":"cwe-704","description":"\"The software does not correctly convert an object, resource, or structure from one type to a different type.\" - For more infomration visit https://cwe.mitre.org/data/definitions/704.html\n","color":"#99ccff","icon":"tag","short_desc":"\"The software does not correctly convert an object, resource, or structure from one type to a different type.\" - For more infomration visit https://cwe.mitre.org/data/definitions/704.html\n..."},{"id":28,"name":"CWE-707: Improper Enforcement of Message or Data Structure","shortname":"cwe-707","description":"\"The software does not enforce or incorrectly enforces that structured messages or data are well-formed before being read from an upstream component or sent to a downstream component.\" - For more infomration visit https://cwe.mitre.org/data/definitions/707.html\n","color":"#99ccff","icon":"tag","short_desc":"\"The software does not enforce or incorrectly enforces that structured messages or data are well-formed before being read from an upstream component or sent to a downstream component.\" - For more infomration visit https://cwe.mitre.org/dat..."},{"id":48,"name":"CWE-710: Improper Adherence to Coding Standards","shortname":"cwe-710","description":"\"The software does not follow certain coding rules for development, which can lead to resultant weaknesses or increase the severity of the associated vulnerabilities.\" - For more infomration visit https://cwe.mitre.org/data/definitions/710.html\n","color":"#99ccff","icon":"tag","short_desc":"\"The software does not follow certain coding rules for development, which can lead to resultant weaknesses or increase the severity of the associated vulnerabilities.\" - For more infomration visit https://cwe.mitre.org/data/definitions/710..."},{"id":51,"name":"CWE-732: Incorrect Permission Assignment for Critical Resource","shortname":"cwe-732","description":"\"The software specifies permissions for a security-critical resource in a way that allows that resource to be read or modified by unintended actors.\" - For more infomration visit https://cwe.mitre.org/data/definitions/732.html\n","color":"#99ccff","icon":"tag","short_desc":"\"The software specifies permissions for a security-critical resource in a way that allows that resource to be read or modified by unintended actors.\" - For more infomration visit https://cwe.mitre.org/data/definitions/732.html\n..."},{"id":100,"name":"CWE-749: Exposed Dangerous Method or Function","shortname":"cwe-749","description":"\"The software provides an Applications Programming Interface (API) or similar interface for interaction with external actors, but the interface includes a dangerous method or function that is not properly restricted.\" - For more infomration visit https://cwe.mitre.org/data/definitions/749.html\n","color":"#99ccff","icon":"tag","short_desc":"\"The software provides an Applications Programming Interface (API) or similar interface for interaction with external actors, but the interface includes a dangerous method or function that is not properly restricted.\" - For more infomratio..."},{"id":46,"name":"CWE-754: Improper Check for Unusual or Exceptional Conditions","shortname":"cwe-754","description":"\"The software does not check or improperly checks for unusual or exceptional conditions that are not expected to occur frequently during day to day operation of the software.\" - For more infomration visit https://cwe.mitre.org/data/definitions/754.html\n","color":"#99ccff","icon":"tag","short_desc":"\"The software does not check or improperly checks for unusual or exceptional conditions that are not expected to occur frequently during day to day operation of the software.\" - For more infomration visit https://cwe.mitre.org/data/definit..."},{"id":494,"name":"CWE-77: Improper Neutralization of Special Elements used in a Command ('Command Injection')","shortname":"cwe-77","description":"\"The software constructs all or part of a command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended command when it is sent to a downstream component.\" - For more infomration visit https://cwe.mitre.org/data/definitions/77.html\n","color":"#99ccff","icon":"tag","short_desc":"\"The software constructs all or part of a command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended command when it is sent t..."},{"id":67,"name":"CWE-787: Out-of-bounds Write","shortname":"cwe-787","description":"\"The software writes data past the end, or before the beginning, of the intended buffer.\" - For more infomration visit https://cwe.mitre.org/data/definitions/787.html\n","color":"#99ccff","icon":"tag","short_desc":"\"The software writes data past the end, or before the beginning, of the intended buffer.\" - For more infomration visit https://cwe.mitre.org/data/definitions/787.html\n..."},{"id":21,"name":"CWE-789: Uncontrolled Memory Allocation","shortname":"cwe-789","description":"\"The product allocates memory based on an untrusted size value, but it does not validate or incorrectly validates the size, allowing arbitrary amounts of memory to be allocated.\" - For more infomration visit https://cwe.mitre.org/data/definitions/789.html\n","color":"#99ccff","icon":"tag","short_desc":"\"The product allocates memory based on an untrusted size value, but it does not validate or incorrectly validates the size, allowing arbitrary amounts of memory to be allocated.\" - For more infomration visit https://cwe.mitre.org/data/defi..."},{"id":12,"name":"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')","shortname":"cwe-79","description":"\"The software does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users.\" - For more infomration visit https://cwe.mitre.org/data/definitions/79.html\n","color":"#99ccff","icon":"tag","short_desc":"\"The software does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users.\" - For more infomration visit https://cwe.mitre.org/data/definitio..."},{"id":89,"name":"CWE-807: Reliance on Untrusted Inputs in a Security Decision","shortname":"cwe-807","description":"\"The application uses a protection mechanism that relies on the existence or values of an input, but the input can be modified by an untrusted actor in a way that bypasses the protection mechanism.\" - For more infomration visit https://cwe.mitre.org/data/definitions/807.html\n","color":"#99ccff","icon":"tag","short_desc":"\"The application uses a protection mechanism that relies on the existence or values of an input, but the input can be modified by an untrusted actor in a way that bypasses the protection mechanism.\" - For more infomration visit https://cwe..."},{"id":94,"name":"CWE-80: Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)","shortname":"cwe-80","description":"\"The software receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special characters such as \u003c, \u003e, and \u0026 that could be interpreted as web-scripting elements when they are sent to a downstream component that processes web pages.\" - For more infomration visit https://cwe.mitre.org/data/definitions/80.html\n","color":"#99ccff","icon":"tag","short_desc":"\"The software receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special characters such as \u003c, \u003e, and \u0026 that could be interpreted as web-scripting elements when they are sent to a downstream co..."},{"id":101,"name":"CWE-821: Incorrect Synchronization","shortname":"cwe-821","description":"\"The software utilizes a shared resource in a concurrent manner but it does not correctly synchronize access to the resource.\" - For more infomration visit https://cwe.mitre.org/data/definitions/821.html\n","color":"#99ccff","icon":"tag","short_desc":"\"The software utilizes a shared resource in a concurrent manner but it does not correctly synchronize access to the resource.\" - For more infomration visit https://cwe.mitre.org/data/definitions/821.html\n..."},{"id":53,"name":"CWE-825: Expired Pointer Dereference","shortname":"cwe-825","description":"\"The program dereferences a pointer that contains a location for memory that was previously valid, but is no longer valid.\" - For more infomration visit https://cwe.mitre.org/data/definitions/825.html\n","color":"#99ccff","icon":"tag","short_desc":"\"The program dereferences a pointer that contains a location for memory that was previously valid, but is no longer valid.\" - For more infomration visit https://cwe.mitre.org/data/definitions/825.html\n..."},{"id":78,"name":"CWE-829: Inclusion of Functionality from Untrusted Control Sphere","shortname":"cwe-829","description":"\"The software imports, requires, or includes executable functionality (such as a library) from a source that is outside of the intended control sphere.\" - For more infomration visit https://cwe.mitre.org/data/definitions/829.html\n","color":"#99ccff","icon":"tag","short_desc":"\"The software imports, requires, or includes executable functionality (such as a library) from a source that is outside of the intended control sphere.\" - For more infomration visit https://cwe.mitre.org/data/definitions/829.html\n..."},{"id":397,"name":"CWE-833: Deadlock","shortname":"cwe-833","description":"\"The software contains multiple threads or executable segments that are waiting for each other to release a necessary lock, resulting in deadlock.\" - For more infomration visit https://cwe.mitre.org/data/definitions/833.html\n","color":"#99ccff","icon":"tag","short_desc":"\"The software contains multiple threads or executable segments that are waiting for each other to release a necessary lock, resulting in deadlock.\" - For more infomration visit https://cwe.mitre.org/data/definitions/833.html\n..."},{"id":83,"name":"CWE-843: Access of Resource Using Incompatible Type ('Type Confusion')","shortname":"cwe-843","description":"\"The program allocates or initializes a resource such as a pointer, object, or variable using one type, but it later accesses that resource using a type that is incompatible with the original type.\" - For more infomration visit https://cwe.mitre.org/data/definitions/843.html\n","color":"#99ccff","icon":"tag","short_desc":"\"The program allocates or initializes a resource such as a pointer, object, or variable using one type, but it later accesses that resource using a type that is incompatible with the original type.\" - For more infomration visit https://cwe..."},{"id":60,"name":"CWE-86: Improper Neutralization of Invalid Characters in Identifiers in Web Pages","shortname":"cwe-86","description":"\"The software does not neutralize or incorrectly neutralizes invalid characters or byte sequences in the middle of tag names, URI schemes, and other identifiers.\" - For more infomration visit https://cwe.mitre.org/data/definitions/86.html\n","color":"#99ccff","icon":"tag","short_desc":"\"The software does not neutralize or incorrectly neutralizes invalid characters or byte sequences in the middle of tag names, URI schemes, and other identifiers.\" - For more infomration visit https://cwe.mitre.org/data/definitions/86.html\n..."},{"id":456,"name":"CWE-88: Argument Injection or Modification","shortname":"cwe-88","description":"\"The software does not sufficiently delimit the arguments being passed to a component in another control sphere, allowing alternate arguments to be provided, leading to potentially security-relevant changes.\" - For more infomration visit https://cwe.mitre.org/data/definitions/88.html\n","color":"#99ccff","icon":"tag","short_desc":"\"The software does not sufficiently delimit the arguments being passed to a component in another control sphere, allowing alternate arguments to be provided, leading to potentially security-relevant changes.\" - For more infomration visit h..."},{"id":79,"name":"CWE-908: Use of Uninitialized Resource","shortname":"cwe-908","description":"\"The software uses a resource that has not been properly initialized.\" - For more infomration visit https://cwe.mitre.org/data/definitions/908.html\n","color":"#99ccff","icon":"tag","short_desc":"\"The software uses a resource that has not been properly initialized.\" - For more infomration visit https://cwe.mitre.org/data/definitions/908.html\n..."},{"id":496,"name":"CWE-917: Improper Neutralization of Special Elements used in an Expression Language Statement ('Expression Language Injection')","shortname":"cwe-917","description":"\"The software constructs all or part of an expression language (EL) statement in a Java Server Page (JSP) using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended EL statement before it is executed.\" - For more infomration visit https://cwe.mitre.org/data/definitions/917.html\n","color":"#99ccff","icon":"tag","short_desc":"\"The software constructs all or part of an expression language (EL) statement in a Java Server Page (JSP) using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements ..."},{"id":27,"name":"CWE-94: Improper Control of Generation of Code ('Code Injection')","shortname":"cwe-94","description":"\"The software constructs all or part of a code segment using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the syntax or behavior of the intended code segment.\" - For more infomration visit https://cwe.mitre.org/data/definitions/94.html\n","color":"#99ccff","icon":"tag","short_desc":"\"The software constructs all or part of a code segment using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the syntax or behavior of the int..."},{"id":448,"name":"CWE-99: Improper Control of Resource Identifiers ('Resource Injection')","shortname":"cwe-99","description":"\"The software receives input from an upstream component, but it does not restrict or incorrectly restricts the input before it is used as an identifier for a resource that may be outside the intended sphere of control.\" - For more infomration visit https://cwe.mitre.org/data/definitions/99.html\n","color":"#99ccff","icon":"tag","short_desc":"\"The software receives input from an upstream component, but it does not restrict or incorrectly restricts the input before it is used as an identifier for a resource that may be outside the intended sphere of control.\" - For more infomrat..."},{"id":9,"name":"Dependency Issue","shortname":"dependency","description":"The fix for this vulnerability involved changing the Chromium dependency file\n","color":"#dbe045","icon":"dependency","short_desc":"The fix for this vulnerability involved changing the Chromium dependency file\n..."},{"id":124,"name":"Discovered Automatically","shortname":"discover-automated","description":"These are vulnerabilities that were discovered using automation. This could be an automated test like a unit test or an automated test case generator such as a fuzz tester.\n\nThis tag is based on the question to our curators, specifically `How was this vulnerability discovered?`, with the option of selecting \"automated\". \n\nAutomatically discovering vulnerabilities typically falls into two categories: [fuzz testing](/articles/what-the-fuzz) and static analysis. ","color":"#9999ff","icon":"robot","short_desc":"These are vulnerabilities that were discovered using automation. This could be an automated test like a unit test or an automated test case generator such as a fuzz tester.\n\nThis tag is based on the question to our curators, specifically `..."},{"id":127,"name":"Discovered Externally","shortname":"external","description":"TODO: Write article for this tag.\n","color":"#9999ff","icon":"external","short_desc":"TODO: Write article for this tag.\n..."},{"id":128,"name":"Discovered in Contest","shortname":"contest","description":"TODO: Write article for this tag.\n","color":"#9999ff","icon":"contest","short_desc":"TODO: Write article for this tag.\n..."},{"id":126,"name":"Discovered Internally","shortname":"internal","description":"TODO: Write article for this tag.\n","color":"#9999ff","icon":"internal","short_desc":"TODO: Write article for this tag.\n..."},{"id":125,"name":"Discovered Manually","shortname":"manual","description":"TODO: Write article for this tag.\n","color":"#9999ff","icon":"hand-pointer","short_desc":"TODO: Write article for this tag.\n..."},{"id":146,"name":"Fix: Big","shortname":"big-fix","description":"We consider a big fix to be greater than 100 lines of code changed (added + deleted).\n","color":"#9FE69F","icon":"big","short_desc":"We consider a big fix to be greater than 100 lines of code changed (added + deleted).\n..."},{"id":147,"name":"Fix: Small","shortname":"small-fix","description":"We consider a small fix to be less than 20 lines of code changed (added + deleted).\n","color":"#9FE69F","icon":"small","short_desc":"We consider a small fix to be less than 20 lines of code changed (added + deleted).\n..."},{"id":376,"name":"i18n","shortname":"i18n","description":"Was the feature impacted by this vulnerability about internationalization (i18n)","color":"#dbe045","icon":"globe-americas","short_desc":"Was the feature impacted by this vulnerability about internationalization (i18n)..."},{"id":129,"name":"Language: C","shortname":"language-c","description":"The fix for these vulnerabilities involved changing files from the C programming language.\n","color":"#890808","icon":"c","short_desc":"The fix for these vulnerabilities involved changing files from the C programming language.\n..."},{"id":130,"name":"Language: C++","shortname":"language-cpp","description":"The fix for these vulnerabilities involved changing files from the C++ programming language.\n","color":"#890808","icon":"cpp","short_desc":"The fix for these vulnerabilities involved changing files from the C++ programming language.\n..."},{"id":132,"name":"Language: Java","shortname":"language-java","description":"The fix for these vulnerabilities involved changing files from the Java programming language.\n","color":"#890808","icon":"java","short_desc":"The fix for these vulnerabilities involved changing files from the Java programming language.\n..."},{"id":131,"name":"Language: Javascript","shortname":"language-js","description":"The fix for these vulnerabilities involved changing files from the Javascript programming language.\n","color":"#890808","icon":"javascript","short_desc":"The fix for these vulnerabilities involved changing files from the Javascript programming language.\n..."},{"id":133,"name":"Language: Python","shortname":"language-python","description":"The fix for these vulnerabilities involved changing files from the Python programming language.\n","color":"#890808","icon":"python","short_desc":"The fix for these vulnerabilities involved changing files from the Python programming language.\n..."},{"id":134,"name":"Language: Ruby","shortname":"language-ruby","description":"","color":"#CC0505","icon":"ruby","short_desc":"..."},{"id":379,"name":"Lesson: Changing Owners","shortname":"owners","description":"Vulnerabilities with this tag have had at least 10 changes in **ownership** over the lifetime of the vulnerable code. A code owner is a person who is in an [`OWNERS or CODEOWNERS`](https://docs.github.com/en/repositories/managing-your-repositorys-settings-and-features/customizing-your-repository/about-code-owners) file that impacts the code. These are people who are tasked with being gatekeepers to the code, reviewing changes. \n\nFrequent changes in ownership can result in loss of institutional knowledge. Thus, we tag vulnerabilities where the code had a lot of ownership changes. ","color":"#009696","icon":"identity","short_desc":"Vulnerabilities with this tag have had at least 10 changes in **ownership** over the lifetime of the vulnerable code. A code owner is a person who is in an [`OWNERS or CODEOWNERS`](https://docs.github.com/en/repositories/managing-your-repo..."},{"id":381,"name":"Lesson: Code Refactors","shortname":"refactors","description":"A vulnerability with this tag has had at least 10 separate weeks where at least one commit mentioned the word \"refactoring\" in the commit message.\n\nRefactoring is generally considered to be a good practice to be doing regularly. It indicates regular maintenance and attention. While refactoring doesn't yield new features or fix defects, it greatly reduces the cost of them. ","color":"#009696","icon":"branch","short_desc":"A vulnerability with this tag has had at least 10 separate weeks where at least one commit mentioned the word \"refactoring\" in the commit message.\n\nRefactoring is generally considered to be a good practice to be doing regularly. It indicat..."},{"id":145,"name":"Lesson: Complex Inputs","shortname":"complex-inputs","description":"Vulnerabilities with this tag were flagged as an example of a recurring lesson in secure software engineering.\n\nHistorically, many vulnerabilities have occurred when a program like an expressive language, a deeply-nested structure, or an intricate compression algorithm. Embedded fonts, URLs, directory paths, video media, vector graphics, query strings, custom protocols, and raster graphics are just a few examples of\ndeceptively complex inputs that have led to vulnerabilities.\n","color":"#009696","icon":"cogs","short_desc":"Vulnerabilities with this tag were flagged as an example of a recurring lesson in secure software engineering.\n\nHistorically, many vulnerabilities have occurred when a program like an expressive language, a deeply-nested structure, or an i..."},{"id":135,"name":"Lesson: Defense in Depth","shortname":"defense","description":"TODO: Write article for this tag.\n","color":"#009696","icon":"archway","short_desc":"TODO: Write article for this tag.\n..."},{"id":139,"name":"Lesson: Distrust Input","shortname":"distrust-input","description":"TODO: Write article for this tag.\n","color":"#009696","icon":"distrust-input","short_desc":"TODO: Write article for this tag.\n..."},{"id":142,"name":"Lesson: Environment Variables","shortname":"environment","description":"TODO: Write article for this tag.\n","color":"#009696","icon":"environment","short_desc":"TODO: Write article for this tag.\n..."},{"id":10,"name":"Lesson: Error of Omission","shortname":"omission","description":"TODO: Write article for this tag.\n","color":"#009696","icon":"ghost","short_desc":"TODO: Write article for this tag.\n..."},{"id":372,"name":"Lesson: Escaped Test","shortname":"escaped","description":"TODO: Write article for this tag.\n","color":"#009696","icon":"lemon","short_desc":"TODO: Write article for this tag.\n..."},{"id":374,"name":"Lesson: Fix Untested","shortname":"untested","description":"TODO: Write article for this tag.\n","color":"#009696","icon":"stamp","short_desc":"TODO: Write article for this tag.\n..."},{"id":137,"name":"Lesson: Frameworks are Optional","shortname":"optional-frameworks","description":"TODO: Write article for this tag.\n","color":"#009696","icon":"framework","short_desc":"TODO: Write article for this tag.\n..."},{"id":373,"name":"Lesson: Lacked Test","shortname":"lacked-test","description":"TODO: Write article for this tag.\n","color":"#009696","icon":"running","short_desc":"TODO: Write article for this tag.\n..."},{"id":136,"name":"Lesson: Least Privilege","shortname":"least-privilege","description":"TODO: Write article for this tag.\n","color":"#009696","icon":"key","short_desc":"TODO: Write article for this tag.\n..."},{"id":138,"name":"Lesson: Native Wrappers","shortname":"native-wrappers","description":"","color":"#009696","icon":"microchip","short_desc":"..."},{"id":382,"name":"Lesson: Reverting Codebase","shortname":"reverts","description":"A vulnerability with this tag has had at least 10 separate weeks where at least one commit mentioned the word \"revert\" in the commit message.\n\nReverting code is a feature of Git that allows you to completly reverse a prior commit. We believe that code with a history of frequent reverts might be indicative that the code owners are too eage to merge in changes without careful review. This hypothesis is untested, but we are curious.","color":"#009696","icon":"rewind","short_desc":"A vulnerability with this tag has had at least 10 separate weeks where at least one commit mentioned the word \"revert\" in the commit message.\n\nReverting code is a feature of Git that allows you to completly reverse a prior commit. We belie..."},{"id":143,"name":"Lesson: Secure By Default","shortname":"secure-by-default","description":"TODO: Write article for this tag.\n","color":"#009696","icon":"default","short_desc":"TODO: Write article for this tag.\n..."},{"id":140,"name":"Lesson: Security By Obscurity","shortname":"obscurity","description":"TODO: Write article for this tag.\n","color":"#009696","icon":"microscope","short_desc":"TODO: Write article for this tag.\n..."},{"id":141,"name":"Lesson: Serial Killer","shortname":"serial","description":"This tag is applied when a lesson can be learned about serialization.\n","color":"#009696","icon":"serial-killer","short_desc":"This tag is applied when a lesson can be learned about serialization.\n..."},{"id":380,"name":"Lesson: Too Many Cooks","shortname":"cooks","description":"TODO Finish this\n\nFamiliarity is difficult to gain with code. Even for the best\ndevelopers, contributing to a piece of source code for the first time\nmeans that they must understand the design decisions from previous\ndevelopers, any issues the code has had historically, and the coding\nstyle. Thus, the first commit any developer makes is risky.\n\nFurthermore, research has shown a strong correlation between code that\nhad many developers and code with vulnerabilities.\n\nWrite about diffusion of responsibility.\n\nProvide a few paragraphs and references about how having multiple\ndevelopers work on a piece of code increases its liklihood of having a\nvulnerability.\n\nNote that we used 10 as an arbitrary threshold, but it's really more of\na spectrum.\n","color":"#009696","icon":"people","short_desc":"TODO Finish this\n\nFamiliarity is difficult to gain with code. Even for the best\ndevelopers, contributing to a piece of source code for the first time\nmeans that they must understand the design decisions from previous\ndevelopers, any issues..."},{"id":144,"name":"Lesson: You Ain't Gonna Need It","shortname":"yagni","description":"TODO: Write article for this tag.\n","color":"#009696","icon":"balance-scale","short_desc":"TODO: Write article for this tag.\n..."},{"id":4,"name":"Lifetime: 180 days to 1 year","shortname":"lifetime-180d1y","description":"","color":"#bd4b51","icon":"hourglass","short_desc":"..."},{"id":5,"name":"Lifetime: 1 to 2 years","shortname":"lifetime-1y2y","description":"","color":"#b83035","icon":"hourglass","short_desc":"..."},{"id":6,"name":"Lifetime: 2 to 5 years","shortname":"lifetime-2y5y","description":"","color":"#ba181el","icon":"hourglass","short_desc":"..."},{"id":2,"name":"Lifetime: 30 to 90 days","shortname":"lifetime-3mo","description":"","color":"#bf777a","icon":"hourglass","short_desc":"..."},{"id":7,"name":"Lifetime: 5+ years","shortname":"lifetime-5y","description":"","color":"#c4020b","icon":"hourglass","short_desc":"..."},{"id":3,"name":"Lifetime: 90 to 180 days","shortname":"lifetime-90d180d","description":"","color":"#bd5e62","icon":"hourglass","short_desc":"..."},{"id":1,"name":"Lifetime: Less than 30 days","shortname":"lifetime-30d","description":"","color":"#d6989b","icon":"hourglass","short_desc":"..."},{"id":377,"name":"Origin Vulnerability","shortname":"Origin","description":"We believe this vulnerability was introduced at the beginning of the project.\n\nSpecifically, one of the [Vulnerability-Contributing Commits](/articles/vccs) is identified as an **origin commit**. In our curations, we look at commits that mark the beginning of the project. These are usually when lots of files are introduce in one commit (e.g. from forking another project, or adapting code). \n","color":"#d845e0","icon":"origin","short_desc":"We believe this vulnerability was introduced at the beginning of the project.\n\nSpecifically, one of the [Vulnerability-Contributing Commits](/articles/vccs) is identified as an **origin commit**. In our curations, we look at commits that m..."},{"id":378,"name":"Project: Chromium","shortname":"project-chromium","description":"Vulnerabilities reported in Chromium Browser\n\nThe Chromium Browser project is the open source project behind Google Chrome.\n\nThroughout the VHP, when we refer to Chromium, we are referring to the Browser. This study does not include ChromeOS.\n","color":"#4587f4","icon":"tag","short_desc":"Vulnerabilities reported in Chromium Browser\n\nThe Chromium Browser project is the open source project behind Google Chrome.\n\nThroughout the VHP, when we refer to Chromium, we are referring to the Browser. This study does not include Chrome..."},{"id":445,"name":"Project: HTTPD","shortname":"project-httpd","description":"Vulnerabilities reported in Apache HTTPD Web Server\n\nApache HTTPD is the most popular web server in the world.\n","color":"#af204c","icon":"tag","short_desc":"Vulnerabilities reported in Apache HTTPD Web Server\n\nApache HTTPD is the most popular web server in the world.\n..."},{"id":528,"name":"Project: Struts","shortname":"project-struts","description":"Vulnerabilities reported in Apache Struts\n\nApache Struts is an MVC web application framework in Java\n","color":"#3186c3","icon":"tag","short_desc":"Vulnerabilities reported in Apache Struts\n\nApache Struts is an MVC web application framework in Java\n..."},{"id":488,"name":"Project: Tomcat","shortname":"project-tomcat","description":"Vulnerabilities reported in Apache Tomcat\n\n\"The Apache Tomcat® software is an open source implementation of the Java Servlet, JavaServer Pages, Java Expression Language and Java WebSocket technologies\" -http://tomcat.apache.org/\n","color":"#d2a41f","icon":"tag","short_desc":"Vulnerabilities reported in Apache Tomcat\n\n\"The Apache Tomcat® software is an open source implementation of the Java Servlet, JavaServer Pages, Java Expression Language and Java WebSocket technologies\" -http://tomcat.apache.org/\n..."},{"id":115,"name":"Severity: Attack Complexity - Low","shortname":"cvss-ac-l","description":"Vulnerabilities with this tag were given a CVSS rating as part of the requirement to be included into the [National Vulnerability Database](https://nvd.nist.gov/). You can learn more about what the individual scores mean in the [CVSS specification document](https://www.first.org/cvss/specification-document). ","color":"#99ccff","icon":"tag","short_desc":"Vulnerabilities with this tag were given a CVSS rating as part of the requirement to be included into the [National Vulnerability Database](https://nvd.nist.gov/). You can learn more about what the individual scores mean in the [CVSS speci..."},{"id":114,"name":"Severity: Attack Vector - Network","shortname":"cvss-av-n","description":"Vulnerabilities with this tag were given a CVSS rating as part of the requirement to be included into the [National Vulnerability Database](https://nvd.nist.gov/). You can learn more about what the individual scores mean in the [CVSS specification document](https://www.first.org/cvss/specification-document). ","color":"#99ccff","icon":"tag","short_desc":"Vulnerabilities with this tag were given a CVSS rating as part of the requirement to be included into the [National Vulnerability Database](https://nvd.nist.gov/). You can learn more about what the individual scores mean in the [CVSS speci..."},{"id":119,"name":"Severity: Availability Impact - Partial","shortname":"cvss-a-p","description":"Vulnerabilities with this tag were given a CVSS rating as part of the requirement to be included into the [National Vulnerability Database](https://nvd.nist.gov/). You can learn more about what the individual scores mean in the [CVSS specification document](https://www.first.org/cvss/specification-document). ","color":"#99ccff","icon":"tag","short_desc":"Vulnerabilities with this tag were given a CVSS rating as part of the requirement to be included into the [National Vulnerability Database](https://nvd.nist.gov/). You can learn more about what the individual scores mean in the [CVSS speci..."},{"id":117,"name":"Severity: Confidentiality Impact - Partial","shortname":"cvss-c-p","description":"Vulnerabilities with this tag were given a CVSS rating as part of the requirement to be included into the [National Vulnerability Database](https://nvd.nist.gov/). You can learn more about what the individual scores mean in the [CVSS specification document](https://www.first.org/cvss/specification-document). ","color":"#99ccff","icon":"tag","short_desc":"Vulnerabilities with this tag were given a CVSS rating as part of the requirement to be included into the [National Vulnerability Database](https://nvd.nist.gov/). You can learn more about what the individual scores mean in the [CVSS speci..."},{"id":123,"name":"Severity: Integrity Impact - High","shortname":"cvss-i-h","description":"Vulnerabilities with this tag were given a CVSS rating as part of the requirement to be included into the [National Vulnerability Database](https://nvd.nist.gov/). You can learn more about what the individual scores mean in the [CVSS specification document](https://www.first.org/cvss/specification-document). ","color":"#99ccff","icon":"tag","short_desc":"Vulnerabilities with this tag were given a CVSS rating as part of the requirement to be included into the [National Vulnerability Database](https://nvd.nist.gov/). You can learn more about what the individual scores mean in the [CVSS speci..."},{"id":118,"name":"Severity: Integrity Impact - Partial","shortname":"cvss-i-p","description":"Vulnerabilities with this tag were given a CVSS rating as part of the requirement to be included into the [National Vulnerability Database](https://nvd.nist.gov/). You can learn more about what the individual scores mean in the [CVSS specification document](https://www.first.org/cvss/specification-document). ","color":"#99ccff","icon":"tag","short_desc":"Vulnerabilities with this tag were given a CVSS rating as part of the requirement to be included into the [National Vulnerability Database](https://nvd.nist.gov/). You can learn more about what the individual scores mean in the [CVSS speci..."},{"id":116,"name":"Severity: Privileges Required - None","shortname":"cvss-au-n","description":"Vulnerabilities with this tag were given a CVSS rating as part of the requirement to be included into the [National Vulnerability Database](https://nvd.nist.gov/). You can learn more about what the individual scores mean in the [CVSS specification document](https://www.first.org/cvss/specification-document). ","color":"#99ccff","icon":"tag","short_desc":"Vulnerabilities with this tag were given a CVSS rating as part of the requirement to be included into the [National Vulnerability Database](https://nvd.nist.gov/). You can learn more about what the individual scores mean in the [CVSS speci..."},{"id":120,"name":"Severity: Privileges Required - None","shortname":"cvss-pr-n","description":"Vulnerabilities with this tag were given a CVSS rating as part of the requirement to be included into the [National Vulnerability Database](https://nvd.nist.gov/). You can learn more about what the individual scores mean in the [CVSS specification document](https://www.first.org/cvss/specification-document). ","color":"#99ccff","icon":"tag","short_desc":"Vulnerabilities with this tag were given a CVSS rating as part of the requirement to be included into the [National Vulnerability Database](https://nvd.nist.gov/). You can learn more about what the individual scores mean in the [CVSS speci..."},{"id":122,"name":"Severity: Scope - Unchanged","shortname":"cvss-s-u","description":"Vulnerabilities with this tag were given a CVSS rating as part of the requirement to be included into the [National Vulnerability Database](https://nvd.nist.gov/). You can learn more about what the individual scores mean in the [CVSS specification document](https://www.first.org/cvss/specification-document). ","color":"#99ccff","icon":"tag","short_desc":"Vulnerabilities with this tag were given a CVSS rating as part of the requirement to be included into the [National Vulnerability Database](https://nvd.nist.gov/). You can learn more about what the individual scores mean in the [CVSS speci..."},{"id":121,"name":"Severity: User Interaction - Required","shortname":"cvss-ui-r","description":"Vulnerabilities with this tag were given a CVSS rating as part of the requirement to be included into the [National Vulnerability Database](https://nvd.nist.gov/). You can learn more about what the individual scores mean in the [CVSS specification document](https://www.first.org/cvss/specification-document). ","color":"#99ccff","icon":"tag","short_desc":"Vulnerabilities with this tag were given a CVSS rating as part of the requirement to be included into the [National Vulnerability Database](https://nvd.nist.gov/). You can learn more about what the individual scores mean in the [CVSS speci..."},{"id":279,"name":"Subsystem: Chromium android web","shortname":"subsystem-chromium-android-web","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":319,"name":"Subsystem: Chromium appcache","shortname":"subsystem-chromium-appcache","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":296,"name":"Subsystem: Chromium appcache, serviceworker","shortname":"subsystem-chromium-appcache-serviceworker","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":152,"name":"Subsystem: Chromium area-misc area-browserbackend","shortname":"subsystem-chromium-area-misc-area-browserbackend","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":235,"name":"Subsystem: Chromium audio","shortname":"subsystem-chromium-audio","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":262,"name":"Subsystem: Chromium aura","shortname":"subsystem-chromium-aura","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":205,"name":"Subsystem: Chromium autofill","shortname":"subsystem-chromium-autofill","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":178,"name":"Subsystem: Chromium autofill, translate","shortname":"subsystem-chromium-autofill-translate","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":197,"name":"Subsystem: Chromium base","shortname":"subsystem-chromium-base","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":283,"name":"Subsystem: Chromium base/memory.","shortname":"subsystem-chromium-base-memory","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":248,"name":"Subsystem: Chromium blink","shortname":"subsystem-chromium-blink","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":272,"name":"Subsystem: Chromium blink/chromium's web workers","shortname":"subsystem-chromium-blink-chromium-s-web-workers","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":322,"name":"Subsystem: Chromium blink\u003edom and platform\u003eextensions","shortname":"subsystem-chromium-blink-dom-and-platform-extensions","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":177,"name":"Subsystem: Chromium blink, internals, and internals\u003eplugins","shortname":"subsystem-chromium-blink-internals-and-internals-plugins","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":294,"name":"Subsystem: Chromium blink \u003e javascript","shortname":"subsystem-chromium-blink-javascript","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":266,"name":"Subsystem: Chromium blink speech","shortname":"subsystem-chromium-blink-speech","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":299,"name":"Subsystem: Chromium blink/storage","shortname":"subsystem-chromium-blink-storage","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":320,"name":"Subsystem: Chromium blink\u003estorage\u003eappcache","shortname":"subsystem-chromium-blink-storage-appcache","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":342,"name":"Subsystem: Chromium blink's v8 rendering engine","shortname":"subsystem-chromium-blink-s-v8-rendering-engine","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":252,"name":"Subsystem: Chromium blink svg","shortname":"subsystem-chromium-blink-svg","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":316,"name":"Subsystem: Chromium blink timer","shortname":"subsystem-chromium-blink-timer","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":324,"name":"Subsystem: Chromium blink ui\u003ebrowser\u003enavigation","shortname":"subsystem-chromium-blink-ui-browser-navigation","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":288,"name":"Subsystem: Chromium blink (webkit core)","shortname":"subsystem-chromium-blink-webkit-core","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":303,"name":"Subsystem: Chromium blink::webstring::fromutf8","shortname":"subsystem-chromium-blink-webstring-fromutf8","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":247,"name":"Subsystem: Chromium blink/widgets","shortname":"subsystem-chromium-blink-widgets","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":302,"name":"Subsystem: Chromium branches/chromium/2272/source/core/rendering/rendercounter.cpp","shortname":"subsystem-chromium-branches-chromium-2272-source-core-rendering-rendercounter-cpp","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":164,"name":"Subsystem: Chromium browser","shortname":"subsystem-chromium-browser","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":227,"name":"Subsystem: Chromium browser/gtk/omnibox/","shortname":"subsystem-chromium-browser-gtk-omnibox","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":166,"name":"Subsystem: Chromium browser, modal dialog","shortname":"subsystem-chromium-browser-modal-dialog","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":224,"name":"Subsystem: Chromium browser render host","shortname":"subsystem-chromium-browser-render-host","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":159,"name":"Subsystem: Chromium browser/security","shortname":"subsystem-chromium-browser-security","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":358,"name":"Subsystem: Chromium browser shell","shortname":"subsystem-chromium-browser-shell","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":318,"name":"Subsystem: Chromium browser ui and extensions","shortname":"subsystem-chromium-browser-ui-and-extensions","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":370,"name":"Subsystem: Chromium browser, web_contents","shortname":"subsystem-chromium-browser-web_contents","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":213,"name":"Subsystem: Chromium build","shortname":"subsystem-chromium-build","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":180,"name":"Subsystem: Chromium build-wrapper","shortname":"subsystem-chromium-build-wrapper","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":149,"name":"Subsystem: Chromium cc","shortname":"subsystem-chromium-cc","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":151,"name":"Subsystem: Chromium chrome","shortname":"subsystem-chromium-chrome","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":189,"name":"Subsystem: Chromium chrome/browser","shortname":"subsystem-chromium-chrome-browser","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":192,"name":"Subsystem: Chromium chrome/browser, media/audio","shortname":"subsystem-chromium-chrome-browser-media-audio","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":162,"name":"Subsystem: Chromium chrome/browser/resources","shortname":"subsystem-chromium-chrome-browser-resources","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":292,"name":"Subsystem: Chromium chrome/browser/speech/extension_api/","shortname":"subsystem-chromium-chrome-browser-speech-extension_api","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":306,"name":"Subsystem: Chromium chrome common - common utilities for general usage","shortname":"subsystem-chromium-chrome-common-common-utilities-for-general-usage","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":239,"name":"Subsystem: Chromium chromecontentrendererclient","shortname":"subsystem-chromium-chromecontentrendererclient","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":241,"name":"Subsystem: Chromium chrome download manager","shortname":"subsystem-chromium-chrome-download-manager","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":150,"name":"Subsystem: Chromium chromehtml uri handler","shortname":"subsystem-chromium-chromehtml-uri-handler","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":328,"name":"Subsystem: Chromium chromium","shortname":"subsystem-chromium-chromium","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":242,"name":"Subsystem: Chromium chromium/base","shortname":"subsystem-chromium-chromium-base","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":269,"name":"Subsystem: Chromium chromium/blink/source/bindings/","shortname":"subsystem-chromium-chromium-blink-source-bindings","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":207,"name":"Subsystem: Chromium chromium-browser","shortname":"subsystem-chromium-chromium-browser","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":218,"name":"Subsystem: Chromium chromium/src/media/base/","shortname":"subsystem-chromium-chromium-src-media-base","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":362,"name":"Subsystem: Chromium chromium's third party webkit","shortname":"subsystem-chromium-chromium-s-third-party-webkit","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":165,"name":"Subsystem: Chromium clipboard","shortname":"subsystem-chromium-clipboard","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":270,"name":"Subsystem: Chromium clipboard-ui","shortname":"subsystem-chromium-clipboard-ui","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":157,"name":"Subsystem: Chromium common","shortname":"subsystem-chromium-common","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":237,"name":"Subsystem: Chromium common/chrome/extensions","shortname":"subsystem-chromium-common-chrome-extensions","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":234,"name":"Subsystem: Chromium content","shortname":"subsystem-chromium-content","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":264,"name":"Subsystem: Chromium content/browser/web_contents and chrome/browser/ui/views.","shortname":"subsystem-chromium-content-browser-web_contents-and-chrome-browser-ui-views","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":345,"name":"Subsystem: Chromium content/child/","shortname":"subsystem-chromium-content-child","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":357,"name":"Subsystem: Chromium content/renderer","shortname":"subsystem-chromium-content-renderer","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":308,"name":"Subsystem: Chromium content/renderer/media/webaudio_capturer_source.cc","shortname":"subsystem-chromium-content-renderer-media-webaudio_capturer_source-cc","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":238,"name":"Subsystem: Chromium content/renderer/media/webrtc_audio_renderer.cc","shortname":"subsystem-chromium-content-renderer-media-webrtc_audio_renderer-cc","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":254,"name":"Subsystem: Chromium contents of /trunk/source/core/rendering/svg/svginlinetextbox.cpp","shortname":"subsystem-chromium-contents-of-trunk-source-core-rendering-svg-svginlinetextbox-cpp","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":343,"name":"Subsystem: Chromium core/frame","shortname":"subsystem-chromium-core-frame","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":367,"name":"Subsystem: Chromium cryptohomed","shortname":"subsystem-chromium-cryptohomed","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":325,"name":"Subsystem: Chromium csp","shortname":"subsystem-chromium-csp","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":327,"name":"Subsystem: Chromium custom button","shortname":"subsystem-chromium-custom-button","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":173,"name":"Subsystem: Chromium desktop_notifications","shortname":"subsystem-chromium-desktop_notifications","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":361,"name":"Subsystem: Chromium developer tools","shortname":"subsystem-chromium-developer-tools","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":297,"name":"Subsystem: Chromium device sensors","shortname":"subsystem-chromium-device-sensors","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":240,"name":"Subsystem: Chromium devtools","shortname":"subsystem-chromium-devtools","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":289,"name":"Subsystem: Chromium dom","shortname":"subsystem-chromium-dom","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":331,"name":"Subsystem: Chromium dom, parser","shortname":"subsystem-chromium-dom-parser","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":315,"name":"Subsystem: Chromium domwindow","shortname":"subsystem-chromium-domwindow","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":366,"name":"Subsystem: Chromium download","shortname":"subsystem-chromium-download","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":313,"name":"Subsystem: Chromium download_commands","shortname":"subsystem-chromium-download_commands","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":183,"name":"Subsystem: Chromium download_exe.cc","shortname":"subsystem-chromium-download_exe-cc","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":206,"name":"Subsystem: Chromium extension_helper.cc","shortname":"subsystem-chromium-extension_helper-cc","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":171,"name":"Subsystem: Chromium extensions","shortname":"subsystem-chromium-extensions","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":334,"name":"Subsystem: Chromium extensions/renderer","shortname":"subsystem-chromium-extensions-renderer","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":349,"name":"Subsystem: Chromium extensions/renderer/resources/binding.js","shortname":"subsystem-chromium-extensions-renderer-resources-binding-js","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":185,"name":"Subsystem: Chromium ffmpeg","shortname":"subsystem-chromium-ffmpeg","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":256,"name":"Subsystem: Chromium file_path.cc","shortname":"subsystem-chromium-file_path-cc","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":346,"name":"Subsystem: Chromium fpdf_render_loadimage.cpp","shortname":"subsystem-chromium-fpdf_render_loadimage-cpp","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":260,"name":"Subsystem: Chromium gaia","shortname":"subsystem-chromium-gaia","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":175,"name":"Subsystem: Chromium geolocation","shortname":"subsystem-chromium-geolocation","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":210,"name":"Subsystem: Chromium gpu","shortname":"subsystem-chromium-gpu","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":368,"name":"Subsystem: Chromium guestview renderer.","shortname":"subsystem-chromium-guestview-renderer","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":217,"name":"Subsystem: Chromium harfbuzz","shortname":"subsystem-chromium-harfbuzz","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":194,"name":"Subsystem: Chromium historycontroller","shortname":"subsystem-chromium-historycontroller","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":219,"name":"Subsystem: Chromium http","shortname":"subsystem-chromium-http","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":184,"name":"Subsystem: Chromium http_network_transaction","shortname":"subsystem-chromium-http_network_transaction","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":356,"name":"Subsystem: Chromium https://codereview.chromium.org/2082893005/patch/1/10001\nhttps://codereview.chromium.org/2082893005/patch/1/10002","shortname":"subsystem-chromium-https-codereview-chromium-org-2082893005-patch-1-10001-https-codereview-chromium-org-2082893005-patch-1-10002","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":311,"name":"Subsystem: Chromium http security","shortname":"subsystem-chromium-http-security","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":231,"name":"Subsystem: Chromium icu46","shortname":"subsystem-chromium-icu46","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":287,"name":"Subsystem: Chromium icu52","shortname":"subsystem-chromium-icu52","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":317,"name":"Subsystem: Chromium image decoding - third party general usage","shortname":"subsystem-chromium-image-decoding-third-party-general-usage","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":182,"name":"Subsystem: Chromium incognito","shortname":"subsystem-chromium-incognito","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":314,"name":"Subsystem: Chromium indexed_db","shortname":"subsystem-chromium-indexed_db","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":232,"name":"Subsystem: Chromium in_process_webkit","shortname":"subsystem-chromium-in_process_webkit","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":304,"name":"Subsystem: Chromium input","shortname":"subsystem-chromium-input","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":250,"name":"Subsystem: Chromium inspector","shortname":"subsystem-chromium-inspector","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":155,"name":"Subsystem: Chromium internals","shortname":"subsystem-chromium-internals","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":226,"name":"Subsystem: Chromium internals and harfbuzz","shortname":"subsystem-chromium-internals-and-harfbuzz","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":257,"name":"Subsystem: Chromium internals/network","shortname":"subsystem-chromium-internals-network","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":221,"name":"Subsystem: Chromium internals \u003e network \u003e ssl","shortname":"subsystem-chromium-internals-network-ssl","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":332,"name":"Subsystem: Chromium internals\u003eplugins\u003epepper","shortname":"subsystem-chromium-internals-plugins-pepper","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":156,"name":"Subsystem: Chromium internals, url_request","shortname":"subsystem-chromium-internals-url_request","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":351,"name":"Subsystem: Chromium ios/web_controller","shortname":"subsystem-chromium-ios-web_controller","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":259,"name":"Subsystem: Chromium jpeg","shortname":"subsystem-chromium-jpeg","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":170,"name":"Subsystem: Chromium js","shortname":"subsystem-chromium-js","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":355,"name":"Subsystem: Chromium layoutblock","shortname":"subsystem-chromium-layoutblock","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":223,"name":"Subsystem: Chromium libpng","shortname":"subsystem-chromium-libpng","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":176,"name":"Subsystem: Chromium libxml","shortname":"subsystem-chromium-libxml","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":211,"name":"Subsystem: Chromium libxml2","shortname":"subsystem-chromium-libxml2","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":275,"name":"Subsystem: Chromium linux sandbox","shortname":"subsystem-chromium-linux-sandbox","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":204,"name":"Subsystem: Chromium m-12","shortname":"subsystem-chromium-m-12","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":293,"name":"Subsystem: Chromium m-40","shortname":"subsystem-chromium-m-40","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":338,"name":"Subsystem: Chromium m-48","shortname":"subsystem-chromium-m-48","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":344,"name":"Subsystem: Chromium m-49","shortname":"subsystem-chromium-m-49","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":229,"name":"Subsystem: Chromium media","shortname":"subsystem-chromium-media","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":243,"name":"Subsystem: Chromium media/filters","shortname":"subsystem-chromium-media-filters","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":278,"name":"Subsystem: Chromium mhtml reading support","shortname":"subsystem-chromium-mhtml-reading-support","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":215,"name":"Subsystem: Chromium navigationcontroller, renderview","shortname":"subsystem-chromium-navigationcontroller-renderview","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":153,"name":"Subsystem: Chromium net","shortname":"subsystem-chromium-net","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":167,"name":"Subsystem: Chromium net/base","shortname":"subsystem-chromium-net-base","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":276,"name":"Subsystem: Chromium net/websockets","shortname":"subsystem-chromium-net-websockets","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":228,"name":"Subsystem: Chromium network","shortname":"subsystem-chromium-network","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":330,"name":"Subsystem: Chromium new tab page","shortname":"subsystem-chromium-new-tab-page","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":333,"name":"Subsystem: Chromium nodeiterator.cpp","shortname":"subsystem-chromium-nodeiterator-cpp","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":190,"name":"Subsystem: Chromium notifications","shortname":"subsystem-chromium-notifications","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":246,"name":"Subsystem: Chromium obvious to see that the bug was in the v8 module from the file names.","shortname":"subsystem-chromium-obvious-to-see-that-the-bug-was-in-the-v8-module-from-the-file-names","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":168,"name":"Subsystem: Chromium omnibox","shortname":"subsystem-chromium-omnibox","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":365,"name":"Subsystem: Chromium omnibox, android, urlbar, suggestionview","shortname":"subsystem-chromium-omnibox-android-urlbar-suggestionview","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":312,"name":"Subsystem: Chromium openjpeg","shortname":"subsystem-chromium-openjpeg","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":307,"name":"Subsystem: Chromium parser","shortname":"subsystem-chromium-parser","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":281,"name":"Subsystem: Chromium pdf","shortname":"subsystem-chromium-pdf","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":284,"name":"Subsystem: Chromium pdfium","shortname":"subsystem-chromium-pdfium","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":371,"name":"Subsystem: Chromium permissions","shortname":"subsystem-chromium-permissions","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":280,"name":"Subsystem: Chromium permissions_data.cc","shortname":"subsystem-chromium-permissions_data-cc","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":187,"name":"Subsystem: Chromium pickle","shortname":"subsystem-chromium-pickle","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":188,"name":"Subsystem: Chromium platform\u003eextensions","shortname":"subsystem-chromium-platform-extensions","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":212,"name":"Subsystem: Chromium plugins","shortname":"subsystem-chromium-plugins","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":244,"name":"Subsystem: Chromium plug-ins","shortname":"subsystem-chromium-plug-ins","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":285,"name":"Subsystem: Chromium pre_blink_merge","shortname":"subsystem-chromium-pre_blink_merge","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":273,"name":"Subsystem: Chromium pre_blink_merge, os-all, clipboard","shortname":"subsystem-chromium-pre_blink_merge-os-all-clipboard","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":199,"name":"Subsystem: Chromium print dialog menu","shortname":"subsystem-chromium-print-dialog-menu","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":369,"name":"Subsystem: Chromium printing","shortname":"subsystem-chromium-printing","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":225,"name":"Subsystem: Chromium profiles","shortname":"subsystem-chromium-profiles","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":359,"name":"Subsystem: Chromium proxy subsystem","shortname":"subsystem-chromium-proxy-subsystem","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":193,"name":"Subsystem: Chromium render","shortname":"subsystem-chromium-render","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":169,"name":"Subsystem: Chromium renderer","shortname":"subsystem-chromium-renderer","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":326,"name":"Subsystem: Chromium renderer extension","shortname":"subsystem-chromium-renderer-extension","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":350,"name":"Subsystem: Chromium renderer host","shortname":"subsystem-chromium-renderer-host","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":271,"name":"Subsystem: Chromium renderer_host","shortname":"subsystem-chromium-renderer_host","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":347,"name":"Subsystem: Chromium renderer media","shortname":"subsystem-chromium-renderer-media","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":295,"name":"Subsystem: Chromium rendering","shortname":"subsystem-chromium-rendering","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":160,"name":"Subsystem: Chromium safebrowsing","shortname":"subsystem-chromium-safebrowsing","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":348,"name":"Subsystem: Chromium safe browsing","shortname":"subsystem-chromium-safe-browsing","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":233,"name":"Subsystem: Chromium safe_browsing","shortname":"subsystem-chromium-safe_browsing","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":305,"name":"Subsystem: Chromium search engine","shortname":"subsystem-chromium-search-engine","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":298,"name":"Subsystem: Chromium serviceworker","shortname":"subsystem-chromium-serviceworker","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":300,"name":"Subsystem: Chromium service worker","shortname":"subsystem-chromium-service-worker","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":353,"name":"Subsystem: Chromium sfntly","shortname":"subsystem-chromium-sfntly","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":309,"name":"Subsystem: Chromium shaping","shortname":"subsystem-chromium-shaping","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":236,"name":"Subsystem: Chromium shared worker","shortname":"subsystem-chromium-shared-worker","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":263,"name":"Subsystem: Chromium shared_worker","shortname":"subsystem-chromium-shared_worker","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":255,"name":"Subsystem: Chromium signin","shortname":"subsystem-chromium-signin","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":196,"name":"Subsystem: Chromium skia","shortname":"subsystem-chromium-skia","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":203,"name":"Subsystem: Chromium spdy","shortname":"subsystem-chromium-spdy","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":209,"name":"Subsystem: Chromium speech","shortname":"subsystem-chromium-speech","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":191,"name":"Subsystem: Chromium speech input","shortname":"subsystem-chromium-speech-input","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":201,"name":"Subsystem: Chromium sqlite","shortname":"subsystem-chromium-sqlite","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":258,"name":"Subsystem: Chromium ssl","shortname":"subsystem-chromium-ssl","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":335,"name":"Subsystem: Chromium subresourceintegrity","shortname":"subsystem-chromium-subresourceintegrity","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":245,"name":"Subsystem: Chromium svg","shortname":"subsystem-chromium-svg","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":195,"name":"Subsystem: Chromium tabbed components","shortname":"subsystem-chromium-tabbed-components","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":214,"name":"Subsystem: Chromium tabcontent","shortname":"subsystem-chromium-tabcontent","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":179,"name":"Subsystem: Chromium tab_contents","shortname":"subsystem-chromium-tab_contents","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":216,"name":"Subsystem: Chromium tab contents navigation controller","shortname":"subsystem-chromium-tab-contents-navigation-controller","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":163,"name":"Subsystem: Chromium tab_contents, renderer_host","shortname":"subsystem-chromium-tab_contents-renderer_host","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":364,"name":"Subsystem: Chromium the child system api and the parent system platform were also affected.","shortname":"subsystem-chromium-the-child-system-api-and-the-parent-system-platform-were-also-affected","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":321,"name":"Subsystem: Chromium the components affected are the 'loader' and its parent component 'blink'.","shortname":"subsystem-chromium-the-components-affected-are-the-loader-and-its-parent-component-blink","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":249,"name":"Subsystem: Chromium thirdparty","shortname":"subsystem-chromium-thirdparty","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":290,"name":"Subsystem: Chromium third_party","shortname":"subsystem-chromium-third_party","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":323,"name":"Subsystem: Chromium third_party/sfntly","shortname":"subsystem-chromium-third_party-sfntly","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":360,"name":"Subsystem: Chromium third_party/webkit","shortname":"subsystem-chromium-third_party-webkit","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":354,"name":"Subsystem: Chromium third_party/webkit (blink).","shortname":"subsystem-chromium-third_party-webkit-blink","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":363,"name":"Subsystem: Chromium third_party/webkit/source/core/frame","shortname":"subsystem-chromium-third_party-webkit-source-core-frame","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":251,"name":"Subsystem: Chromium /third_party/webkit/source/webkit/chromium/src","shortname":"subsystem-chromium-third_party-webkit-source-webkit-chromium-src","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":329,"name":"Subsystem: Chromium /trunk/src/third_party/brotli","shortname":"subsystem-chromium-trunk-src-third_party-brotli","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":202,"name":"Subsystem: Chromium ui","shortname":"subsystem-chromium-ui","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":220,"name":"Subsystem: Chromium ui and chrome/browser/translate subsystem","shortname":"subsystem-chromium-ui-and-chrome-browser-translate-subsystem","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":339,"name":"Subsystem: Chromium ui/browser/downloads","shortname":"subsystem-chromium-ui-browser-downloads","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":148,"name":"Subsystem: Chromium url_elider","shortname":"subsystem-chromium-url_elider","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":161,"name":"Subsystem: Chromium url input subsystem","shortname":"subsystem-chromium-url-input-subsystem","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":158,"name":"Subsystem: Chromium utilities","shortname":"subsystem-chromium-utilities","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":341,"name":"Subsystem: Chromium utility","shortname":"subsystem-chromium-utility","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":181,"name":"Subsystem: Chromium v8","shortname":"subsystem-chromium-v8","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":200,"name":"Subsystem: Chromium video","shortname":"subsystem-chromium-video","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":274,"name":"Subsystem: Chromium views","shortname":"subsystem-chromium-views","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":301,"name":"Subsystem: Chromium vpx video decoder","shortname":"subsystem-chromium-vpx-video-decoder","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":286,"name":"Subsystem: Chromium web audio module","shortname":"subsystem-chromium-web-audio-module","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":340,"name":"Subsystem: Chromium webcontents","shortname":"subsystem-chromium-webcontents","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":337,"name":"Subsystem: Chromium web contents","shortname":"subsystem-chromium-web-contents","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":222,"name":"Subsystem: Chromium webcore","shortname":"subsystem-chromium-webcore","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":282,"name":"Subsystem: Chromium webcore, blink.","shortname":"subsystem-chromium-webcore-blink","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":261,"name":"Subsystem: Chromium webcore (renamed to core)","shortname":"subsystem-chromium-webcore-renamed-to-core","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":174,"name":"Subsystem: Chromium webdata","shortname":"subsystem-chromium-webdata","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":267,"name":"Subsystem: Chromium webdatabase","shortname":"subsystem-chromium-webdatabase","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":198,"name":"Subsystem: Chromium webgl","shortname":"subsystem-chromium-webgl","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":154,"name":"Subsystem: Chromium webkit","shortname":"subsystem-chromium-webkit","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":291,"name":"Subsystem: Chromium webkit/blink","shortname":"subsystem-chromium-webkit-blink","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":277,"name":"Subsystem: Chromium webkit layouts","shortname":"subsystem-chromium-webkit-layouts","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":230,"name":"Subsystem: Chromium webkit module plugins","shortname":"subsystem-chromium-webkit-module-plugins","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":208,"name":"Subsystem: Chromium webkit plugins","shortname":"subsystem-chromium-webkit-plugins","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":253,"name":"Subsystem: Chromium webkit, weburlloader","shortname":"subsystem-chromium-webkit-weburlloader","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":265,"name":"Subsystem: Chromium webkit xss auditor","shortname":"subsystem-chromium-webkit-xss-auditor","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":336,"name":"Subsystem: Chromium webrtc_audio_private","shortname":"subsystem-chromium-webrtc_audio_private","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":268,"name":"Subsystem: Chromium websocketdispatcherhost","shortname":"subsystem-chromium-websocketdispatcherhost","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":172,"name":"Subsystem: Chromium websockets","shortname":"subsystem-chromium-websockets","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":352,"name":"Subsystem: Chromium webstore, browser extentions","shortname":"subsystem-chromium-webstore-browser-extentions","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":310,"name":"Subsystem: Chromium webui","shortname":"subsystem-chromium-webui","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":186,"name":"Subsystem: Chromium xml xpath","shortname":"subsystem-chromium-xml-xpath","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":419,"name":"Subsystem: HTTPD arch","shortname":"subsystem-httpd-arch","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":405,"name":"Subsystem: HTTPD authentication","shortname":"subsystem-httpd-authentication","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":409,"name":"Subsystem: HTTPD authentication and authorization","shortname":"subsystem-httpd-authentication-and-authorization","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":426,"name":"Subsystem: HTTPD cache","shortname":"subsystem-httpd-cache","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":418,"name":"Subsystem: HTTPD cache, dav","shortname":"subsystem-httpd-cache-dav","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":443,"name":"Subsystem: HTTPD cgi generation","shortname":"subsystem-httpd-cgi-generation","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":428,"name":"Subsystem: HTTPD c modules","shortname":"subsystem-httpd-c-modules","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":399,"name":"Subsystem: HTTPD core","shortname":"subsystem-httpd-core","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":437,"name":"Subsystem: HTTPD dav","shortname":"subsystem-httpd-dav","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":424,"name":"Subsystem: HTTPD dav, info, ldap, proxy balancer, and proxy ftp","shortname":"subsystem-httpd-dav-info-ldap-proxy-balancer-and-proxy-ftp","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":400,"name":"Subsystem: HTTPD http","shortname":"subsystem-httpd-http","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":402,"name":"Subsystem: HTTPD http2","shortname":"subsystem-httpd-http2","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":432,"name":"Subsystem: HTTPD httpd/modules/http/","shortname":"subsystem-httpd-httpd-modules-http","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":407,"name":"Subsystem: HTTPD http module","shortname":"subsystem-httpd-http-module","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":425,"name":"Subsystem: HTTPD http-server","shortname":"subsystem-httpd-http-server","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":401,"name":"Subsystem: HTTPD http token parsing","shortname":"subsystem-httpd-http-token-parsing","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":441,"name":"Subsystem: HTTPD log","shortname":"subsystem-httpd-log","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":412,"name":"Subsystem: HTTPD logger","shortname":"subsystem-httpd-logger","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":440,"name":"Subsystem: HTTPD logging","shortname":"subsystem-httpd-logging","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":411,"name":"Subsystem: HTTPD mod_cgid","shortname":"subsystem-httpd-mod_cgid","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":414,"name":"Subsystem: HTTPD mod_dav","shortname":"subsystem-httpd-mod_dav","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":406,"name":"Subsystem: HTTPD mod_http2","shortname":"subsystem-httpd-mod_http2","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":423,"name":"Subsystem: HTTPD mod_negotiation","shortname":"subsystem-httpd-mod_negotiation","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":434,"name":"Subsystem: HTTPD mod_proxy","shortname":"subsystem-httpd-mod_proxy","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":420,"name":"Subsystem: HTTPD mod_proxy_ftp","shortname":"subsystem-httpd-mod_proxy_ftp","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":417,"name":"Subsystem: HTTPD [\"mod_reqtimeout\", \"core\"]","shortname":"subsystem-httpd-mod_reqtimeout-core","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":413,"name":"Subsystem: HTTPD mod_session","shortname":"subsystem-httpd-mod_session","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":435,"name":"Subsystem: HTTPD mod_ssl","shortname":"subsystem-httpd-mod_ssl","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":427,"name":"Subsystem: HTTPD mod_status","shortname":"subsystem-httpd-mod_status","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":408,"name":"Subsystem: HTTPD modules","shortname":"subsystem-httpd-modules","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":422,"name":"Subsystem: HTTPD modules/proxy/mod_proxy_ajp.c","shortname":"subsystem-httpd-modules-proxy-mod_proxy_ajp-c","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":438,"name":"Subsystem: HTTPD modules/ssl/ssl_engine_io.c","shortname":"subsystem-httpd-modules-ssl-ssl_engine_io-c","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":436,"name":"Subsystem: HTTPD protocol","shortname":"subsystem-httpd-protocol","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":416,"name":"Subsystem: HTTPD proxy","shortname":"subsystem-httpd-proxy","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":415,"name":"Subsystem: HTTPD server","shortname":"subsystem-httpd-server","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":444,"name":"Subsystem: HTTPD server/core","shortname":"subsystem-httpd-server-core","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":410,"name":"Subsystem: HTTPD server/mpm/winnt/","shortname":"subsystem-httpd-server-mpm-winnt","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":403,"name":"Subsystem: HTTPD server protocol","shortname":"subsystem-httpd-server-protocol","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":421,"name":"Subsystem: HTTPD server's config filters subsystem","shortname":"subsystem-httpd-server-s-config-filters-subsystem","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":404,"name":"Subsystem: HTTPD server/util_script.c","shortname":"subsystem-httpd-server-util_script-c","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":430,"name":"Subsystem: HTTPD src/modules/standard/mod_imap.c","shortname":"subsystem-httpd-src-modules-standard-mod_imap-c","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":429,"name":"Subsystem: HTTPD ssl","shortname":"subsystem-httpd-ssl","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":439,"name":"Subsystem: HTTPD ssl_util.c","shortname":"subsystem-httpd-ssl_util-c","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":433,"name":"Subsystem: HTTPD this mod was found in the ssl authentication for tcp connections subsystem.","shortname":"subsystem-httpd-this-mod-was-found-in-the-ssl-authentication-for-tcp-connections-subsystem","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":442,"name":"Subsystem: HTTPD webdav","shortname":"subsystem-httpd-webdav","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":431,"name":"Subsystem: HTTPD worker","shortname":"subsystem-httpd-worker","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":522,"name":"Subsystem: Struts action mapping","shortname":"subsystem-struts-action-mapping","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":507,"name":"Subsystem: Struts convention handlers","shortname":"subsystem-struts-convention-handlers","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":510,"name":"Subsystem: Struts core","shortname":"subsystem-struts-core","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":513,"name":"Subsystem: Struts core/src/main/java/com/opensymphony/xwork2/ognl","shortname":"subsystem-struts-core-src-main-java-com-opensymphony-xwork2-ognl","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":508,"name":"Subsystem: Struts /core/.../validator/validators/","shortname":"subsystem-struts-core-validator-validators","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":521,"name":"Subsystem: Struts defaultactionmapper","shortname":"subsystem-struts-defaultactionmapper","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":518,"name":"Subsystem: Struts defaults","shortname":"subsystem-struts-defaults","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":500,"name":"Subsystem: Struts dispatcher","shortname":"subsystem-struts-dispatcher","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":524,"name":"Subsystem: Struts dispatcher, mapper","shortname":"subsystem-struts-dispatcher-mapper","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":523,"name":"Subsystem: Struts dispatcher, xwork2","shortname":"subsystem-struts-dispatcher-xwork2","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":519,"name":"Subsystem: Struts fileupload","shortname":"subsystem-struts-fileupload","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":506,"name":"Subsystem: Struts freemarker","shortname":"subsystem-struts-freemarker","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":527,"name":"Subsystem: Struts interceptor","shortname":"subsystem-struts-interceptor","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":517,"name":"Subsystem: Struts interceptor/cookieinterceptor","shortname":"subsystem-struts-interceptor-cookieinterceptor","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":520,"name":"Subsystem: Struts mapper","shortname":"subsystem-struts-mapper","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":504,"name":"Subsystem: Struts ognl","shortname":"subsystem-struts-ognl","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":509,"name":"Subsystem: Struts ognl expression evaluation","shortname":"subsystem-struts-ognl-expression-evaluation","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":503,"name":"Subsystem: Struts ./pom.xml","shortname":"subsystem-struts-pom-xml","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":514,"name":"Subsystem: Struts resources","shortname":"subsystem-struts-resources","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":501,"name":"Subsystem: Struts rest api plugin","shortname":"subsystem-struts-rest-api-plugin","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":499,"name":"Subsystem: Struts rest plugin","shortname":"subsystem-struts-rest-plugin","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":505,"name":"Subsystem: Struts struts2-rest-plugin","shortname":"subsystem-struts-struts2-rest-plugin","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":525,"name":"Subsystem: Struts url","shortname":"subsystem-struts-url","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":502,"name":"Subsystem: Struts validator","shortname":"subsystem-struts-validator","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":516,"name":"Subsystem: Struts web authentication","shortname":"subsystem-struts-web-authentication","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":512,"name":"Subsystem: Struts xslt","shortname":"subsystem-struts-xslt","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":526,"name":"Subsystem: Struts xwork","shortname":"subsystem-struts-xwork","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":511,"name":"Subsystem: Struts xwork2","shortname":"subsystem-struts-xwork2","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":515,"name":"Subsystem: Struts xwork-core","shortname":"subsystem-struts-xwork-core","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":472,"name":"Subsystem: Tomcat ajp","shortname":"subsystem-tomcat-ajp","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":462,"name":"Subsystem: Tomcat apache.cayote","shortname":"subsystem-tomcat-apache-cayote","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":481,"name":"Subsystem: Tomcat authenticator","shortname":"subsystem-tomcat-authenticator","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":463,"name":"Subsystem: Tomcat catalina","shortname":"subsystem-tomcat-catalina","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":486,"name":"Subsystem: Tomcat catalina loader/startup","shortname":"subsystem-tomcat-catalina-loader-startup","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":476,"name":"Subsystem: Tomcat connectors","shortname":"subsystem-tomcat-connectors","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":477,"name":"Subsystem: Tomcat core","shortname":"subsystem-tomcat-core","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":478,"name":"Subsystem: Tomcat coyote http connector","shortname":"subsystem-tomcat-coyote-http-connector","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":475,"name":"Subsystem: Tomcat digestauthenticator.java","shortname":"subsystem-tomcat-digestauthenticator-java","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":467,"name":"Subsystem: Tomcat documentation","shortname":"subsystem-tomcat-documentation","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":470,"name":"Subsystem: Tomcat factory","shortname":"subsystem-tomcat-factory","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":474,"name":"Subsystem: Tomcat fileupload","shortname":"subsystem-tomcat-fileupload","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":465,"name":"Subsystem: Tomcat http11","shortname":"subsystem-tomcat-http11","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":464,"name":"Subsystem: Tomcat http2","shortname":"subsystem-tomcat-http2","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":473,"name":"Subsystem: Tomcat http protocol - cpu","shortname":"subsystem-tomcat-http-protocol-cpu","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":484,"name":"Subsystem: Tomcat jsse","shortname":"subsystem-tomcat-jsse","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":482,"name":"Subsystem: Tomcat manager","shortname":"subsystem-tomcat-manager","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":471,"name":"Subsystem: Tomcat manager, host-manager","shortname":"subsystem-tomcat-manager-host-manager","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":480,"name":"Subsystem: Tomcat mbeans","shortname":"subsystem-tomcat-mbeans","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":468,"name":"Subsystem: Tomcat naming service provider subsystem","shortname":"subsystem-tomcat-naming-service-provider-subsystem","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":485,"name":"Subsystem: Tomcat res","shortname":"subsystem-tomcat-res","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":469,"name":"Subsystem: Tomcat resources","shortname":"subsystem-tomcat-resources","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":483,"name":"Subsystem: Tomcat servletcontext","shortname":"subsystem-tomcat-servletcontext","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":487,"name":"Subsystem: Tomcat startup","shortname":"subsystem-tomcat-startup","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":466,"name":"Subsystem: Tomcat under coyote subdirectory which handles processes. http2 subsystem falls under it.","shortname":"subsystem-tomcat-under-coyote-subdirectory-which-handles-processes-http2-subsystem-falls-under-it","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":479,"name":"Subsystem: Tomcat wrapper","shortname":"subsystem-tomcat-wrapper","description":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may also look at bug reports or commit messages to make this determination.\n\nAs part of the editorial process, we periodically combine subsystems together. If you see two subsystems that ought to be combined, then do a pull request against the vulnerabilities involved! We welcome that kind of edit.\n\n","color":"#6aa5e5","icon":"cogs","short_desc":"\n\nMost software project don't make a definitive list of their subsystems, so the subsystems tags are our curators' best guess at what part(s) of the system a vulnerability was in. Often, curators will look at file paths primarily, but may ..."},{"id":375,"name":"VCC","shortname":"vcc","description":"A **vulnerability-contributing commit** is a commit that we believe is the origin of a vulnerability in source control. If a vulnerability has this tag, then we have found at least one VCC for it. \n\nWe use a modified version of the [SZZ algorithm](https://dl.acm.org/doi/abs/10.1145/1082983.1083147) using the [archeogit](https://github.com/samaritan/archeogit) built by Nuthan Munaiah to identify VCCs. In short, this algorithm uses `git blame` functionality to trace individual lines of code back to their origins. Curators are asked to verify if the VCCs are valid, so these have manual curations as well. ","color":"#c686d9","icon":"vcc","short_desc":"A **vulnerability-contributing commit** is a commit that we believe is the origin of a vulnerability in source control. If a vulnerability has this tag, then we have found at least one VCC for it. \n\nWe use a modified version of the [SZZ al..."}]